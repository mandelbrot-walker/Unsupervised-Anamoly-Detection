install.packages("ClusterR")
dat = as.matrix(ncentrality2)
dat = center_scale(dat)
center_scale <- function(x) {
scale(x, scale = FALSE)
}
dat = center_scale(dat)
gmm = GMM(dat, 2, "maha_dist", "random_subset", 10, 10)
library(ClusterR)
dat = as.matrix(ncentrality2)
dat = center_scale(dat)
gmm = GMM(dat, 2, "maha_dist", "random_subset", 10, 10)
View(gmm)
View(gmm)
View(gmm)
plot(gmm$centroids,gmm$covariance_matrices)
plot(gmm$centroids,gmm$Log_likelihood)
plot(gmm$centroids,gmm$weights)
k14<-kmeans(gmm$centroids, 5, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
k14<-kmeans(gmm$centroids, 2, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
k14<-kmeans(gmm$centroids, 1, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
p1 <- fviz_cluster(k14, geom = "point",  data = ncentrality2) + ggtitle("k = 3")
grid.arrange(p1, nrow = 1)
p1 <- fviz_cluster(k14, geom = "point",  data = gmm) + ggtitle("k = 3")
p1 <- fviz_cluster(k14, geom = "point",  data = gmm$centroids) + ggtitle("k = 3")
grid.arrange(p1, nrow = 1)
install.packages("mclust")
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
xyMclust <- Mclust(ncentrality2)
plot(xyMclust)
View(gmm)
gmm$centroids
gmm$Log_likelihood
View(tsne_model_7)
plot(gmm$Log_likelihood,tsne_model_7$Y)
plot(gmm$Log_likelihood,col=ncen_tr$names, asp=1)
plot(gmm$Log_likelihood,tsne_model_7$Y, col=ncen_tr$names, asp=1)
plot(gmm$Log_likelihood,tsne_model_7$Y, col=ncen_tr$names, asp=1)
plot(gmm$Log_likelihood,tsne_model_7$Y)
plot(gmm$Log_likelihood,tsne_model_7$Y, c=c(1,2,3,4,5,6,7,8))
plot(gmm$Log_likelihood,tsne_model_7$Y, col=c(1,2,3,4,5,6,7,8))
View(xyMclust)
summary(xyMclust)
summary(xyMclust, parameters = TRUE)
clustgmm <- Mclust(ncentrality2,5)
plot(clustgmm, what=c("classification"))
clustgmm$G
plot(clustgmm, "density")
plot(clustgmm, "bic")
plot(clustgmm, what=c("bic"))
plot(clustgmm, what=c("BIC"))
install.packages("kohonen")
library(kohonen)
data_train_matrix <- as.matrix(scale(ncentrality2))
# Create the SOM Grid - you generally have to specify the size of the
# training grid prior to training the SOM. Hexagonal and Circular
# topologies are possible
som_grid <- somgrid(xdim = 20, ydim=20, topo="hexagonal")
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- som(data_train_matrix,
grid=som_grid,
rlen=100,
alpha=c(0.05,0.01),
keep.data = TRUE,
n.hood="circular")
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- som(data_train_matrix,
grid=som_grid,
rlen=100,
alpha=c(0.05,0.01),
keep.data = TRUE,
n.hood=circular)
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- som(data_train_matrix,
grid=som_grid,
rlen=100,
alpha=c(0.05,0.01),
keep.data = TRUE,
n.hood="circular")
plot(som_model, type="changes")
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- xyf(data_train_matrix,
grid=som_grid,
rlen=100,
alpha=c(0.05,0.01),
keep.data = TRUE,
n.hood="circular")
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- som(data_train_matrix,
grid = som.grid,
rlen = 100,
alpha = c(0.05,0.01),
keep.data = TRUE,
n.hood = "circular",
toroidal = T)
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- som(data_train_matrix,
grid = som.grid,
rlen = 100,
alpha = c(0.05,0.01),
keep.data = FALSE,
n.hood = "circular",
toroidal = T)
help("kohonen")
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
## keeping original data
d_tsne_1_original=tsne_model_7
d_tsne_1 =tsne_model_7
## Creating k-means clustering model, and assigning the result to the data used to create the tsne
fit_cluster_kmeans=kmeans(scale(d_tsne_1), 3)
d_tsne_1_original$cl_kmeans = factor(fit_cluster_kmeans$cluster)
## Creating hierarchical cluster model, and assigning the result to the data used to create the tsne
fit_cluster_hierarchical=hclust(dist(scale(d_tsne_1)))
## setting 3 clusters as output
d_tsne_1_original$cl_hierarchical = factor(cutree(fit_cluster_hierarchical, k=3))
plot_cluster=function(data, var_cluster, palette)
{
ggplot(data, aes_string(x="V1", y="V2", color=var_cluster)) +
geom_point(size=0.25) +
guides(colour=guide_legend(override.aes=list(size=6))) +
xlab("") + ylab("") +
ggtitle("") +
theme_light(base_size=20) +
theme(axis.text.x=element_blank(),
axis.text.y=element_blank(),
legend.direction = "horizontal",
legend.position = "bottom",
legend.box = "horizontal") +
scale_colour_brewer(palette = palette)
}
plot_k=plot_cluster(d_tsne_1_original, "cl_kmeans", "Accent")
plot_h=plot_cluster(d_tsne_1_original, "cl_hierarchical", "Set1")
d_tsne_1_original=as.data.frame(tsne_model_7$Y)
d_tsne_1 =tsne_model_7
## Creating k-means clustering model, and assigning the result to the data used to create the tsne
fit_cluster_kmeans=kmeans(scale(d_tsne_1), 3)
d_tsne_1_original$cl_kmeans = factor(fit_cluster_kmeans$cluster)
## Creating hierarchical cluster model, and assigning the result to the data used to create the tsne
fit_cluster_hierarchical=hclust(dist(scale(d_tsne_1)))
## setting 3 clusters as output
d_tsne_1_original$cl_hierarchical = factor(cutree(fit_cluster_hierarchical, k=3))
plot_cluster=function(data, var_cluster, palette)
{
ggplot(data, aes_string(x="V1", y="V2", color=var_cluster)) +
geom_point(size=0.25) +
guides(colour=guide_legend(override.aes=list(size=6))) +
xlab("") + ylab("") +
ggtitle("") +
theme_light(base_size=20) +
theme(axis.text.x=element_blank(),
axis.text.y=element_blank(),
legend.direction = "horizontal",
legend.position = "bottom",
legend.box = "horizontal") +
scale_colour_brewer(palette = palette)
}
plot_k=plot_cluster(d_tsne_1_original, "cl_kmeans", "Accent")
plot_h=plot_cluster(d_tsne_1_original, "cl_hierarchical", "Set1")
## and finally: putting the plots side by side with gridExtra lib...
library(gridExtra)
grid.arrange(plot_k, plot_h,  ncol=2)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
head(nncentrality)
head(ncentrality)
head(ncentrality2)
plot(tsne_model_4$Y,col=c(33,31,26,48,153,142,53,12), asp=1)
plot(tsne_model_4$Y,col=33,31,26,48,153,142,53,12, asp=1)
plot(tsne_model_4$Y,col=c(33), asp=1)
plot(tsne_model_4$Y,col=c("red"), asp=1)
plot(tsne_model_4$Y,col=c("red","purple","blue","green","black","yellow","orange","magenta"), asp=1)
colors<-c("red","purple","blue","green","black","yellow","orange","magenta")
plot(tsne_model_4$Y,col=colors, asp=1)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
tsne_model_t = Rtsne(ncentrality, check_duplicates=FALSE, pca=TRUE, perplexity=43, theta=0.10, dims=1, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 7)
plot(tsne_model_t$Y,col=ncen_tr$names, asp=1)
tsne_model_t$Y
tsne_model_t = Rtsne(as.data.frame(tsne_model_y$Y), check_duplicates=FALSE, pca=TRUE, perplexity=43, theta=0.10, dims=1, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 7)
tsne_model_t = Rtsne(as.data.frame(tsne_model_7$Y), check_duplicates=FALSE, pca=TRUE, perplexity=43, theta=0.10, dims=1, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 7)
plot(tsne_model_t$Y,col=ncen_tr$names, asp=1)
rm(tsne_model_t)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(scatterplot3d)
set.seed(358)
tsne_model_t = Rtsne(as.matrix(ncentrality2), check_duplicates=FALSE, pca=TRUE, perplexity=43, theta=0.10, dims=3, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 7)
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = c("red","purple","blue","green","black","yellow","orange","magenta")[ncen_tr$names])
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = c("red","purple","blue","green","black","yellow","orange","magenta"))
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = c("red"))
View(tsne_model_t)
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = colors[as.factor(ncen_tr$names)])
length(tsne_model_t$Y[,1])
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = colors[as.factor(length(tsne_model_t$Y[,1]))])
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = colors[length(tsne_model_t$Y[,1])])
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=ncen_tr$names, asp=1)
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color =ncen_tr$names, asp=1)
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = c("red","green","blue")[ncen_tr$names], asp=1)
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = c("blue")[ncen_tr$names], asp=1)
scatterplot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
color = c("blue"), asp=1)
install.packages("rgl")
library(rgl)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta")[ncen_tr$names],
type="s",radius=0.5)
widget
save <- getOption("rgl.useNULL")
options(rgl.useNULL=TRUE)
example("plot3d", "rgl")
widget <- rglwidget(x = scene3d(minimal), width = figWidth(), height = figHeight(),
controllers = NULL, snapshot = FALSE,
elementId = NULL, reuse = !interactive(),
webGLoptions = list(preserveDrawingBuffer = TRUE),
shared = NULL, minimal = TRUE)
if (interactive())
widget
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(scatterplot3d)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
library(rgl)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
set.seed(358)
tsne_model_t = Rtsne(as.matrix(ncentrality2), check_duplicates=FALSE, pca=TRUE, perplexity=43, theta=0.10, dims=3, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 7)
library(rgl)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(scatterplot3d)
library(rgl)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
set.seed(358)
tsne_model_t5 = Rtsne(as.matrix(ncentrality2), check_duplicates=FALSE, pca=TRUE, perplexity=43, theta=0.10, dims=3, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 6)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
set.seed(358)
tsne_model_t5 = Rtsne(as.matrix(pcacen2), check_duplicates=FALSE, pca=TRUE, perplexity=30, theta=0.50, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 6)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black"),
type="s",radius=0.5)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange"),
type="s",radius=0.5)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red"),
type="s",radius=0.5)
set.seed(358)
tsne_model_t5 = Rtsne(as.matrix(ncentrality2), check_duplicates=FALSE, pca=TRUE, perplexity=30, theta=0.50, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 6)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
tsne_model_t5$Y[, 3]
tsne_model_t5
view(tsne_model_t5)
set.seed(358)
tsne_model_t5 = Rtsne(as.matrix(ncentrality2), check_duplicates=FALSE, pca=TRUE, perplexity=30, theta=0.50, dims=3, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 6)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
set.seed(358)
tsne_model_t5_1 = Rtsne(ncentrality2, check_duplicates=FALSE, pca=TRUE, perplexity=30, theta=0.50, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 6)
plot(tsne_model_t5_1$Y,col=ncen_tr$names, asp=1)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(scatterplot3d)
library(rgl)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t5$Y[,1],y=tsne_model_t5$Y[,2],z=tsne_model_t5$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
plot3d(x=tsne_model_t$Y[,1],y=tsne_model_t$Y[,2],z=tsne_model_t$Y[,3],
col=c("red","purple","blue","green","black","yellow","orange","magenta"),
type="s",radius=0.5)
View(center_scale)
View(center_scale)
rm(center_scale(),plot_cluster(),wss,wss_values,k.values,colors,xyMclust,tsne_model_4,tsne_model_5,tsne_model_6,tsne_model_7,
tsne_model_t,tsne_model_t5,tsne_model_t5_1,som_grid,res.db,res.pca,res.pca2,res.pca3,res.pca4,plot_h,plot_k,pcacen,pcacen2,
p1,p2,p3,p4,p5,p6,ncentrality,ncentrality2,ncen_tr,k14,hc1,gmm,fit_cluster_hierarchical,fit_cluster_kmeans,data_train_matrix,dat,
d_tsne_1_original,d_tsne_1,clustgmm,check,centrality,c1,c2,c3,c4,c5,c6)
rm(colors,xyMclust,tsne_model_4,tsne_model_5,tsne_model_6,tsne_model_7,
tsne_model_t,tsne_model_t5,tsne_model_t5_1,som_grid,res.db,res.pca,res.pca2,res.pca3,res.pca4,plot_h,plot_k,pcacen,pcacen2,
p1,p2,p3,p4,p5,p6,ncentrality,ncentrality2,ncen_tr,k14,hc1,gmm,fit_cluster_hierarchical,fit_cluster_kmeans,data_train_matrix,dat,
d_tsne_1_original,d_tsne_1,clustgmm,check,centrality,c1,c2,c3,c4,c5,c6)
View(center_scale)
rm(wss_values)
rm(center_scale
rm(center_scale)
rm(wss)
rm(k.values)
transitivity(g) #  Check for cross clique calculation
rm(plot_cluster())
rm(plot_cluster
rm(plot_cluster)
save.image(".Rdata",safe = TRUE)
.Rdata
rm(list = ls())
