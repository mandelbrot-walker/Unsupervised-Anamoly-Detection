ntopologicalcoeff = normalize(topol)
neccentricity = normalize(ecc)
ngeodkpath   = normalize(gkp)
nstress      = normalize(unlist(str))
ninformationcent = normalize(unlist(infc))
nlocalbridge = normalize(lbc)
ncentrality  <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
closeness   = ncloseness,
pagerank    = npagerank,
#crossclique = ncrossclique,
betweenness = nbetweenness,
hubscore    = nhubscore,
authorities = nauthorities,
radiality   = nradiality,
clusterrank = nclusterrank,
dmnc        = ndmnc,
lobby       = nlobby,
leverage    = nleverage,
subgraph    = nsubgraph,
topologicalcoeff = ntopologicalcoeff,
eccentricity = neccentricity,
geodkpath   = ngeodkpath,
stress      = nstress,
informationcent = ninformationcent,
localbridge = nlocalbridge
) #  normalized values 8 variables
rm(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge)
#------------------------------------------Data loader and centrality calculation End-------------------------------------#
var8<-ncentrality
#------------------------------------------Boxplot and corelation matrix start-------------------------------------#
M <- cor(ncentrality)
#plot correlation matrix
bmp("corrplot.bmp", width = 1280, height = 720)
c<-corrplot(M, method = "circle") # correlation matrix
dev.off()
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
c1<-kmeans(var8, 2, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
plot(d_tsne_1_var8, col = c1$cluster)
#----------------------kmenas k=3------------------------------------#
c2<-kmeans(var8, 3, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
#Kmeans for tsne model 1
p1 <- fviz_cluster(c1, geom = "point",  data = d_tsne_1_var8) + ggtitle("k = 2 var8")
bmp("tsne_model1_kmeans_k2.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c2, geom = "point",  data = d_tsne_1_var8) + ggtitle("k = 3 var8")
bmp("tsne_model1_kmeans_k3.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
d_tsne_1_var8 = as.data.frame(tsne_model_1_var8$Y) #list to dataframe var 8
#~~~~~~~~~~~~~tsne model 2~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
d_tsne_2_var8 = as.data.frame(tsne_model_2_var8$Y) #list to dataframe var 8
#~~~~~~~~~~~~~tsne model 3~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
d_tsne_3_var8 = as.data.frame(tsne_model_3_var8$Y) #list to dataframe var 8
#~~~~~~~~~~~~~tsne model 4~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
d_tsne_4_var8 = as.data.frame(tsne_model_4_var8$Y) #list to dataframe var 8
#-------------TSNE data frames for kmeans end--------------------------------------#
#-------------kmeans on dataset and cluster onto TSNE start----------------------------
ncen_tr<-transpose(ncentrality) #  transpose ncentrality for tsne colors
ncen_tr<-data.frame(names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"radiality","clusterrank","dmnc","lobby","leverage","subgraph","topologicalcoeff","eccentricity",
"geodkpath","stress","informationcent","localbridge"),ncen_tr) #y label
set.seed(32)
tsne_model_1_var8 = Rtsne(var8, check_duplicates=FALSE, pca=TRUE, perplexity=50, theta=0.20, dims=2, max_iter = 2000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 8)
bmp("tsne_model_1_var8.bmp", width = 1920, height = 1080)
plot(tsne_model_1_var8$Y,col=1:19, asp=1)
dev.off()
set.seed(323)
tsne_model_2_var8 = Rtsne(var8, check_duplicates=FALSE, pca=TRUE, perplexity=100, theta=0.10, dims=2, max_iter = 1500,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 8) #lowest error
bmp("tsne_model_2_var8.bmp", width = 1920, height = 1080)
plot(tsne_model_2_var8$Y,col=1:19, asp=1)
dev.off()
#-------------------------------------------------------tsne model 2 end--------------------------------------------#
save.image(".Rdata",safe = TRUE)
#-------------------------------------------------------tsne model 3 start--------------------------------------------#
set.seed(333)
tsne_model_3_var8 = Rtsne(var8, check_duplicates=FALSE, pca=TRUE, perplexity=30, theta=0.50, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 8) #lowest error
bmp("tsne_model_3_var8.bmp", width = 1920, height = 1080)
plot(tsne_model_3_var8$Y,col=1:19, asp=1)
dev.off()
#-------------------------------------------------------tsne model 3 end--------------------------------------------#
save.image(".Rdata",safe = TRUE)
#-------------------------------------------------------tsne model 4 start--------------------------------------------#
set.seed(358)
tsne_model_4_var8 = Rtsne(var8, check_duplicates=FALSE, pca=TRUE, perplexity=43, theta=0.10, dims=2, max_iter = 1500,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 8)
bmp("tsne_model_4_var8.bmp", width = 1920, height = 1080)
plot(tsne_model_4_var8$Y,col=1:19, asp=1)
dev.off()
d_tsne_1_var8 = as.data.frame(tsne_model_1_var8$Y) #list to dataframe var 8
#~~~~~~~~~~~~~tsne model 2~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
d_tsne_2_var8 = as.data.frame(tsne_model_2_var8$Y) #list to dataframe var 8
#~~~~~~~~~~~~~tsne model 3~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
d_tsne_3_var8 = as.data.frame(tsne_model_3_var8$Y) #list to dataframe var 8
#~~~~~~~~~~~~~tsne model 4~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
d_tsne_4_var8 = as.data.frame(tsne_model_4_var8$Y) #list to dataframe var 8
#-------------TSNE data frames for kmeans end--------------------------------------#
#-------------kmeans on dataset and cluster onto TSNE start-------------------------------------------------#
#----------------------kmenas k=2------------------------------------#
c1<-kmeans(var8, 2, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
plot(d_tsne_1_var8, col = c1$cluster)
#----------------------kmenas k=3------------------------------------#
c2<-kmeans(var8, 3, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
#Kmeans for tsne model 1
p1 <- fviz_cluster(c1, geom = "point",  data = d_tsne_1_var8) + ggtitle("k = 2 var8")
bmp("tsne_model1_kmeans_k2.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c2, geom = "point",  data = d_tsne_1_var8) + ggtitle("k = 3 var8")
bmp("tsne_model1_kmeans_k3.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c5, geom = "point",  data = d_tsne_2_var8) + ggtitle("k = 2 var8")
bmp("tsne_model2_kmeans_k2.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c10, geom = "point",  data = d_tsne_2_var8) + ggtitle("k = 3 var8")
bmp("tsne_model2_kmeans_k3.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#Kmeans for tsne model 3
p1 <- fviz_cluster(c5, geom = "point",  data = d_tsne_3_var8) + ggtitle("k = 2 var8")
bmp("tsne_model3_kmeans_k2.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c10, geom = "point",  data = d_tsne_3_var8) + ggtitle("k = 3 var8")
bmp("tsne_model3_kmeans_k3.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#Kmeans for tsne model 4
p1 <- fviz_cluster(c5, geom = "point",  data = d_tsne_4_var8) + ggtitle("k = 2 var8")
bmp("tsne_model4_kmeans_k2.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c10, geom = "point",  data = d_tsne_4_var8) + ggtitle("k = 3 var8")
bmp("tsne_model4_kmeans_k3.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
round(calinhara(tsne_model_1_var8$Y,c1$cluster),digits=2)
round(calinhara(tsne_model_1_var8$Y,c2$cluster),digits=3)
p1 <- fviz_cluster(c1, geom = "point",  data = d_tsne_2_var8) + ggtitle("k = 2 var8")
bmp("tsne_model2_kmeans_k2.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c2, geom = "point",  data = d_tsne_2_var8) + ggtitle("k = 3 var8")
bmp("tsne_model2_kmeans_k3.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#Kmeans for tsne model 3
p1 <- fviz_cluster(c1, geom = "point",  data = d_tsne_3_var8) + ggtitle("k = 2 var8")
bmp("tsne_model3_kmeans_k2.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c2, geom = "point",  data = d_tsne_3_var8) + ggtitle("k = 3 var8")
bmp("tsne_model3_kmeans_k3.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#Kmeans for tsne model 4
p1 <- fviz_cluster(c1, geom = "point",  data = d_tsne_4_var8) + ggtitle("k = 2 var8")
bmp("tsne_model4_kmeans_k2.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
p1 <- fviz_cluster(c2, geom = "point",  data = d_tsne_4_var8) + ggtitle("k = 3 var8")
bmp("tsne_model4_kmeans_k3.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
round(calinhara(tsne_model_1_var8$Y,c1$cluster),digits=2)
round(calinhara(tsne_model_1_var8$Y,c2$cluster),digits=3)
c1<-kmeans(var8, 3, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
plot(d_tsne_1_var8, col = c1$cluster)
#----------------------kmenas k=3------------------------------------#
c2<-kmeans(var8, 4, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
round(calinhara(tsne_model_1_var8$Y,c1$cluster),digits=3)
round(calinhara(tsne_model_1_var8$Y,c2$cluster),digits=4)
c1<-kmeans(var8, 2, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
plot(d_tsne_1_var8, col = c1$cluster)
#----------------------kmenas k=3------------------------------------#
c2<-kmeans(var8, 3, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE)
rm(c1,c2,c3,c4,c1,c6,c7,c8,c9,c2,p1,p2,p3,p4,p5)
rm(d_tsne_1_var6_degree,d_tsne_1_var5,d_tsne_1_var6, d_tsne_1_var7, d_tsne_1_var8)
rm(d_tsne_2_var6_degree,d_tsne_2_var5,d_tsne_2_var6, d_tsne_2_var7, d_tsne_2_var8)
rm(d_tsne_3_var6_degree,d_tsne_3_var5,d_tsne_3_var6, d_tsne_3_var7, d_tsne_3_var8)
rm(d_tsne_4_var6_degree,d_tsne_4_var5,d_tsne_4_var6, d_tsne_4_var7, d_tsne_4_var8)
bmp("dbscan_kneeplot_var8.bmp", width = 841, height = 477)
dbscan::kNNdistplot(var8, k =  2)
abline(h = 0.068, lty = 2)
dev.off()
abline(h = 0.19, lty = 2)
bmp("dbscan_kneeplot_var8.bmp", width = 841, height = 477)
dbscan::kNNdistplot(var8, k =  2)
abline(h = 0.19, lty = 2)
dev.off()
bmp("dbscan_kneeplot_var8.bmp", width = 841, height = 477)
dbscan::kNNdistplot(var8, k =  2)
abline(h = 0.21, lty = 2)
dev.off()
res.db <- dbscan::dbscan(var8, 0.068, 2)
gc()
bmp("dbscan_var8.bmp", width = 1980, height = 1280)
fviz_cluster(res.db, var8, geom = "point")
dev.off()
warnings()
xyMclust <- Mclust(as.matrix(var8), prior = priorControl(),
control = emControl(),
warn = mclust.options("warn"),
verbose = TRUE)
plot(xyMclust)
plot(xyMclust)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
ndegree      = normalize(dg)
neigenvector = normalize(eig)
ncloseness   = normalize(clsn)
npagerank    = normalize(pgr)
#ncrossclique = normalize(crsc)
nbetweenness = normalize(btn)
nhubscore    = normalize(V(gr)$hubs)
nauthorities = normalize(V(gr)$authorities)
nradiality   = normalize(radial)
nclusterrank = normalize(clstrnk)
ndmnc        = normalize(denmnc)
nlobby       = normalize(lby)
nleverage    = normalize(lvg)
nsubgraph    = normalize(abs(subg))
ntopologicalcoeff = normalize(topol)
neccentricity = normalize(ecc)
ngeodkpath   = normalize(gkp)
nstress      = normalize(unlist(str))
ninformationcent = normalize(unlist(infc))
nlocalbridge = normalize(lbc)
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"radiality","clusterrank","dmnc","lobby","leverage","subgraph","topologicalcoeff","eccentricity",
"geodkpath","stress","informationcent","localbridge"),
las = 2,
col = 1:19,#c("orange","red"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"radiality","clusterrank","dmnc","lobby","leverage","subgraph","topologicalcoeff","eccentricity",
"geodkpath","stress","informationcent","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"radiality","clusterrank","dmnc","lobby","leverage","subgraph","topologicalcoeff","eccentricity",
"geodkpath","stress","informationcent","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = T
) #multiple boxplot
dev.off()
#plot boxplot
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"radiality","clusterrank","dmnc","lobby","leverage","subgraph","topologicalcoeff","eccentricity",
"geodkpath","stress","informationcent","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
rm(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge)
plot(xyMclust)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(sna)
gc()
diffdg<-diffusion.degree(g)
load<- calculate_centralities(g, include = "Load Centrality")
V(gr)$diffusioncent<-diffdg
centrality <- data.frame(row.names   = V(gr)$name,
degree      = V(gr)$degree,
eigenvector = V(gr)$eig,
closeness   = V(gr)$closeness,
pagerank    = V(gr)$pagerank,
betweenness = V(gr)$betweenness,
hubscore    = V(gr)$hubs,
authorities = V(gr)$authorities,
radiality   = V(gr)$radial,
clusterrank = V(gr)$clusterrank,
densitymnc  = V(gr)$dmnc,
lobby       = V(gr)$lobby,
leverage    = V(gr)$leverage,
#subgraph    = V(gr)$subgraph,
topologicalcoeff = V(gr)$topologicalcoeff,
eccentricity = V(gr)$eccentricity,
geodkpath   = V(gr)$gdkpath,
stress      = V(gr)$stress,
informationcent = V(gr)$informationcent,
localbridge = V(gr)$localbrigdecent,
diffusion   = V(gr)$diffusioncent<-diffdg
) #  Non-normalized centrality values
centrality <- centrality[order(row.names(centrality)),] #  These values are not normalized
ndiffusion   = normalize(diffdg)
ncentrality  <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
closeness   = ncloseness,
pagerank    = npagerank,
#crossclique = ncrossclique,
betweenness = nbetweenness,
hubscore    = nhubscore,
authorities = nauthorities,
radiality   = nradiality,
clusterrank = nclusterrank,
dmnc        = ndmnc,
lobby       = nlobby,
leverage    = nleverage,
#subgraph    = nsubgraph,
topologicalcoeff = ntopologicalcoeff,
eccentricity = neccentricity,
geodkpath   = ngeodkpath,
stress      = nstress,
informationcent = ninformationcent,
localbridge = nlocalbridge,
diffusion   = ndiffusion
) #  normalized values 8 variables
ndegree      = normalize(dg)
neigenvector = normalize(eig)
ncloseness   = normalize(clsn)
npagerank    = normalize(pgr)
#ncrossclique = normalize(crsc)
nbetweenness = normalize(btn)
nhubscore    = normalize(V(gr)$hubs)
nauthorities = normalize(V(gr)$authorities)
nradiality   = normalize(radial)
nclusterrank = normalize(clstrnk)
ndmnc        = normalize(denmnc)
nlobby       = normalize(lby)
nleverage    = normalize(lvg)
nsubgraph    = normalize(abs(subg))
ntopologicalcoeff = normalize(topol)
neccentricity = normalize(ecc)
ngeodkpath   = normalize(gkp)
nstress      = normalize(unlist(str))
ninformationcent = normalize(unlist(infc))
nlocalbridge = normalize(lbc)
ncentrality  <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
closeness   = ncloseness,
pagerank    = npagerank,
#crossclique = ncrossclique,
betweenness = nbetweenness,
hubscore    = nhubscore,
authorities = nauthorities,
radiality   = nradiality,
clusterrank = nclusterrank,
dmnc        = ndmnc,
lobby       = nlobby,
leverage    = nleverage,
#subgraph    = nsubgraph,
topologicalcoeff = ntopologicalcoeff,
eccentricity = neccentricity,
geodkpath   = ngeodkpath,
stress      = nstress,
informationcent = ninformationcent,
localbridge = nlocalbridge,
diffusion   = ndiffusion
) #  normalized values 8 variables
var8<-ncentrality
bmp("corrplot.bmp", width = 1280, height = 720)
c<-corrplot(M, method = "circle") # correlation matrix
dev.off()
#------------------------------------------Boxplot and corelation matrix start-------------------------------------#
M <- cor(ncentrality)
bmp("corrplot.bmp", width = 1280, height = 720)
c<-corrplot(M, method = "circle") # correlation matrix
dev.off()
#plot boxplot
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge,ndiffusion,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"radiality","clusterrank","dmnc","lobby","leverage","subgraph","topologicalcoeff","eccentricity",
"geodkpath","stress","informationcent","localbridge","diffusion"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
res.pca8<-prcomp(scale(var8),center=TRUE) #  8 variables
p1<-fviz_eig(res.pca8,addlabels = TRUE)#Scree plot 8 var
bmp("screeplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
p1<-fviz_pca_biplot(res.pca8, label ="var")#biplot 8 var
bmp("biplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p5d1,p5d2, nrow = 1, ncol = 2)
dev.off()
rm(p5d1,p5d2) #  remove contribution plot variables
p1<-fviz_pca_var(res.pca8,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  8 variables
bmp("cos2 contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
gc()
