#df <- cbind(df,unlist(tmp)) vector[(length(vector) + 1):(length(vector) + length(values))] <- values
}
str[-1]
rm(chk)
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
gc()
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(g), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
for (i in 1:length(cmp)) {
#t<-cmp[[i]]
#tmp<-calculate_centralities(as.directed(g), include = "Information Centrality")
#str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
is.connected(cmp[[i]])
}
for (i in 1:length(cmp)) {
#t<-cmp[[i]]
#tmp<-calculate_centralities(as.directed(g), include = "Information Centrality")
#str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
print(is.connected(cmp[[i]]))
}
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(g), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
str[-1]
t<-cmp[[1]]
str<-c(0)
str[-1]
t<-cmp[[1]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
gc()
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
str<-c(0)
t<-cmp[[1]]
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
str[-1]
str
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
str[17905]
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
str[17904]
str[17905]
components(g)
str[-1]
length(str)
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
str[1]
rm(str[1])
str<-str[-1]
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
str[-1]
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
str2<-str[-1]
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
str2[(length(str2) + 1):(length(str2) + length(unlist(tmp)))]<-unlist(tmp)
}
str2<-str[-1]
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
str2[(length(str2) + 1):(length(str2) + length(unlist(tmp)))]<-unlist(tmp)
}
t
i
cmp[[234]]
which_loop(g)
which_loop(cmp[[234]])
calculate_centralities(as.directed(t), include = "Information Centrality")
radial<-c(0)
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-radiality(t)
radial[(length(radial) + 1):(length(radial) + length(tmp))]<-tmp
}
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-radiality(t)
radial[(length(radial) + 1):(length(radial) + length(tmp))]<-tmp
}
radial<-radial[-1]
abc<-as.data.frame(radial)
View(abc)
rm(abc)
centiserve:::topocoefficient()
centiserve:::topocoefficient
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
diffdg<-diffusion.degree(g)
V(gr)$diffusioncent<-diffdg
centrality <- data.frame(row.names   = V(gr)$name,
degree      = V(gr)$degree,
eigenvector = V(gr)$eig,
closeness   = V(gr)$closeness,
pagerank    = V(gr)$pagerank,
betweenness = V(gr)$betweenness,
hubscore    = V(gr)$hubs,
authorities = V(gr)$authorities,
#radiality   = V(gr)$radial,
#clusterrank = V(gr)$clusterrank,
densitymnc  = V(gr)$dmnc,
lobby       = V(gr)$lobby,
leverage    = V(gr)$leverage,
#subgraph    = V(gr)$subgraph,
#topologicalcoeff = V(gr)$topologicalcoeff,
eccentricity = V(gr)$eccentricity,
geodkpath   = V(gr)$gdkpath,
#stress      = V(gr)$stress,
#informationcent = V(gr)$informationcent,
localbridge = V(gr)$localbrigdecent,
diffusion   = V(gr)$diffusioncent<-diffdg
) #  Non-normalized centrality values
centrality <- centrality[order(row.names(centrality)),] #  These values are not normalized
ndegree      = normalize(dg)
neigenvector = normalize(eig)
ncloseness   = normalize(clsn)
npagerank    = normalize(pgr)
#ncrossclique = normalize(crsc)
nbetweenness = normalize(btn)
nhubscore    = normalize(V(gr)$hubs)
nauthorities = normalize(V(gr)$authorities)
#nradiality   = normalize(radial)
#nclusterrank = normalize(clstrnk)
ndmnc        = normalize(denmnc)
nlobby       = normalize(lby)
nleverage    = normalize(lvg)
#nsubgraph    = normalize(abs(subg))
#ntopologicalcoeff = normalize(topol)
neccentricity = normalize(ecc)
ngeodkpath   = normalize(gkp)
#nstress      = normalize(unlist(str))
#ninformationcent = normalize(unlist(infc))
nlocalbridge = normalize(lbc)
ndiffusion   = normalize(diffdg)
ncentrality  <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
closeness   = ncloseness,
pagerank    = npagerank,
#crossclique = ncrossclique,
betweenness = nbetweenness,
hubscore    = nhubscore,
authorities = nauthorities,
#radiality   = nradiality,
#clusterrank = nclusterrank,
dmnc        = ndmnc,
lobby       = nlobby,
leverage    = nleverage,
#subgraph    = nsubgraph,
#topologicalcoeff = ntopologicalcoeff,
eccentricity = neccentricity,
geodkpath   = ngeodkpath,
#stress      = nstress,
#informationcent = ninformationcent,
localbridge = nlocalbridge,
diffusion   = ndiffusion
) #  normalized values 8 variables
M <- cor(ncentrality)
#plot correlation matrix
bmp("corrplot.bmp", width = 1280, height = 720)
c<-corrplot(M, method = "circle") # correlation matrix
dev.off()
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,ndmnc,
nlobby,nleverage,neccentricity,ngeodkpath,nlocalbridge,ndiffusion,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"dmnc","lobby","leverage","eccentricity",
"geodkpath","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
#plot boxplot
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,ndmnc,
nlobby,nleverage,neccentricity,ngeodkpath,nlocalbridge,ndiffusion,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"dmnc","lobby","leverage","eccentricity",
"geodkpath","localbridge","ndiffusion"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
res.pca8<-prcomp(scale(var8),center=TRUE) #  8 variables
#show pca values
print(res.pca8)
p1<-fviz_eig(res.pca8,addlabels = TRUE)#Scree plot 8 var
#plot screeplot
bmp("screeplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
p1<-fviz_pca_biplot(res.pca8, label ="var")#biplot 8 var
#plot biplot
bmp("biplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
#plot contribution to dimensions
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p5d1,p5d2, nrow = 1, ncol = 2)
dev.off()
rm(p5d1,p5d2) #  remove contribution plot variables
# Color by contributions to the PC uses cos^2 value
p1<-fviz_pca_var(res.pca8,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  8 variables
#plot contribution wise pca
#plot biplot
bmp("cos2 contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
var8<-ncentrality
res.pca8<-prcomp(scale(var8),center=TRUE) #  8 variables
#show pca values
print(res.pca8)
p1<-fviz_eig(res.pca8,addlabels = TRUE)#Scree plot 8 var
#plot screeplot
bmp("screeplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
p1<-fviz_pca_biplot(res.pca8, label ="var")#biplot 8 var
#plot biplot
bmp("biplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
#plot contribution to dimensions
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p5d1,p5d2, nrow = 1, ncol = 2)
dev.off()
rm(p5d1,p5d2) #  remove contribution plot variables
# Color by contributions to the PC uses cos^2 value
p1<-fviz_pca_var(res.pca8,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  8 variables
#plot contribution wise pca
#plot biplot
bmp("cos2 contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
