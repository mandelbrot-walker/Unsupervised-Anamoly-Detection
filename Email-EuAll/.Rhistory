library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
#------------------------------------------Data loader and centrality calculation start-------------------------------------#
edges<-read.delim("Email-EuAll.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
transitivity(g)
dg<-degree(g) # Calculation of Degre centrality
write.csv(dg, "dg_Email_EuAll.csv")
btn<-betweenness(g) # Calculation of Betweeness centrality
write.csv(btn, "btn_Email_EuAll.csv")
eig<-evcent(g)$vector # Calculation of Eigenvector centrality
write.csv(eig, "eig_Email_EuAll.csv")
clsn<-closeness(g) # Calculation of Closeness centrality
write.csv(clsn, "clsn_Email_EuAll.csv")
pgr<-page_rank(g)$vector #Calculation of Page Rank centrality
write.csv(pgr, "pgr_Email_EuAll.csv")
katz<-katzcent(g) # Error in alpha >= maxEigenvalue : invalid comparison with complex values
crsc<-crossclique(g) # Calculation of Cross-Clique centrality
write.csv(crsc, "crsc_Email_EuAll.csv")
frm<-closeness.freeman(g) # Not calculatable as graphis not strongly connected
edge_connectivity(g) # Outputs 0
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(resample)
library(earth)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
crsc<-crossclique(g) # Calculation of Cross-Clique centrality
write.csv(crsc, "crsc_Email_EuAll.csv")
gc()
gr<-g # temporary variable gr
V(gr)$degree <- dg                               # Degree centrality
V(gr)$eig <- eig                                 # Eigenvector centrality
V(gr)$closeness <- clsn                          # Closeness centrality
V(gr)$pagerank <- pgr                            # Pagerank centrality
V(gr)$betweenness <- btn                         # Vertex betweenness centrality
V(gr)$crossclique <- crsc                        # Crossclique centrality
V(gr)$hubs <- hub.score(g)$vector                # "Hub" centrality
V(gr)$authorities <- authority.score(g)$vector   # "Authority" centrality
centrality <- data.frame(row.names   = V(gr)$name,
degree      = V(gr)$degree,
eigenvector = V(gr)$eig,
closeness   = V(gr)$closeness,
pagerank    = V(gr)$pagerank,
crossclique = V(gr)$crossclique,
betweenness = V(gr)$betweenness,
hubscore    = V(gr)$hubs,
authorities = V(gr)$authorities
)
centrality <- centrality[order(row.names(centrality)),] # These values are not normalized
head(centrality) #check centrality variables
ndegree      = normalize(dg)
neigenvector = normalize(eig)
ncloseness   = normalize(clsn)
npagerank    = normalize(pgr)
ncrossclique = normalize(crsc)
nbetweenness = normalize(btn)
nhubscore    = normalize(V(gr)$hubs)
nauthorities = normalize(V(gr)$authorities)
ncentrality <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
closeness   = ncloseness,
pagerank    = npagerank,
crossclique = ncrossclique,
betweenness = nbetweenness
) #normalized values 6 variables
ncentrality2 <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
closeness   = ncloseness,
pagerank    = npagerank,
crossclique = ncrossclique,
betweenness = nbetweenness,
hubscore    = nhubscore,
authorities = nauthorities
write.csv(centrality,"Centrality_Email_EuAll.csv")
write.csv(ncentrality,"NCentrality_Email_EuAll_6var.csv")
write.csv(ncentrality2,"NCentrality_Email_EuAll.csv")
ncentrality2 <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
closeness   = ncloseness,
pagerank    = npagerank,
crossclique = ncrossclique,
betweenness = nbetweenness,
hubscore    = nhubscore,
authorities = nauthorities
)#normalized values 8 variables
write.csv(centrality,"Centrality_Email_EuAll.csv")
write.csv(ncentrality,"NCentrality_Email_EuAll_6var.csv")
write.csv(ncentrality2,"NCentrality_Email_EuAll.csv")
gc()
M <- cor(ncentrality2)
corrplot(M, method = "circle") # correlation matrix
boxplot(ndegree, neigenvector, ncloseness, npagerank,ncrossclique,nbetweenness,nhubscore,nauthorities,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8),
names = c("ndegree", "neigenvector", "ncloseness", "npagerank","ncrossclique","nbetweenness","nhubscore","nauthorities"),
las = 2,
col = c("orange","red"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
corrplot(M, method = "circle") # correlation matrix
lay <- layout.fruchterman.reingold(g) # For plotting graph
lay2 <- layout_with_fr(g) # For plotting graph
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
#library(fastnet)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
lay <- layout.fruchterman.reingold(g) # For plotting graph
lay2 <- layout_with_fr(g) # For plotting graph
test<-graph.data.frame(crsc) #graph data frame for igraph
crsc
View(g)
View(edges)
t1<-cbind(edges$X..FromNodeId,crsc)
View(t1)
View(gr)
View(t1)
rm.Na(t1)
plot(test, layout = lay, vertex.label = NA)
test<-graph.data.frame(t1) #graph data frame for igraph
plot(test, layout = lay, vertex.label = NA)
plot(test, layout = lay2, vertex.label = NA)
rm(t1)
test<-graph.data.frame(ncentrality2) #graph data frame for igraph
plot(test, layout = lay, vertex.label = NA)
View(test)
lay <- layout.fruchterman.reingold(test) # For plotting graph
lay2 <- layout_with_fr(test) # For plotting graph
plot(test, layout = lay, vertex.label = NA)
test<-graph.data.frame(centrality2) #graph data frame for igraph
lay <- layout.fruchterman.reingold(test) # For plotting graph
lay2 <- layout_with_fr(test) # For plotting graph
plot(test, layout = lay, vertex.label = NA)
plot(test, layout = lay2, vertex.label = NA)
test<-graph.data.frame(centrality) #graph data frame for igraph
lay <- layout.fruchterman.reingold(test) # For plotting graph
lay2 <- layout_with_fr(test) # For plotting graph
plot(test, layout = lay, vertex.label = NA)
plot(test, layout = lay2, vertex.label = NA)
?plot.igraph
lay <- layout.fruchterman.reingold(g) # For plotting graph
lay2 <- layout_with_fr(g) # For plotting graph
plot.igraph(g, layout=lay,
vertex.size=ncrossclique,    # Rescaled by multiplying by 25
main="ncross-clique")
plot.igraph(g, layout=lay,
vertex.size=crsc*0.25,    # Rescaled by multiplying by 25
main="cross-clique")
plot.igraph(g, layout=lay,
vertex.size=crsc*0.05,    # Rescaled by multiplying by 25
main="cross-clique")
plot(g, layout = lay, vertex.label = NA)
plot(g, layout = lay2, vertex.label = NA)
crsc
range(crsc)
plot.igraph(g, layout=lay,
vertex.size=btn*0.25,    # Rescaled by multiplying by 25
main="Betweeness")
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
grid.arrange(arrangeGrob(p1, p2, p3, p4,p5, main = "Biplot", ncol=2))
p1<-biplot(res.pca6_degree,scale=0, cex=.7)#biplot 5 var
p2<-biplot(res.pca5,scale=0, cex=.7)#biplot 5 var
p3<-biplot(res.pca6,scale=0, cex=.7)#biplot 6 var
p4<-biplot(res.pca7,scale=0, cex=.7)#biplot 7 var
p5<-biplot(res.pca8,scale=0, cex=.7)#biplot 8 var
res.pca6_degree<-prcomp(scale(var6_degree),center=TRUE) #  with degree 5 variables
res.pca5<-prcomp(scale(var5),center=TRUE) #  without degree 5 variables
res.pca6<-prcomp(scale(var6),center=TRUE) #  6 variables
res.pca7<-prcomp(scale(var7),center=TRUE) #  7 variables
res.pca8<-prcomp(scale(var8),center=TRUE) #  8 variables
#show pca values
print(res.pca6_degree)
print(res.pca5)
print(res.pca6)
print(res.pca7)
print(res.pca8)
rm(ncentrality,ncentrality2)
rm(test)
ncentrality  <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
closeness   = ncloseness,
pagerank    = npagerank,
crossclique = ncrossclique,
betweenness = nbetweenness,
hubscore    = nhubscore,
authorities = nauthorities
) #  normalized values 8 variables
var8<-ncentrality
var7<-within(ncentrality, rm(degree)) #without degree total 7 variables
var6<-within(var7, rm(hubscore)) #without hubscore total 6 variables
var5<-within(var6, rm(authorities)) #without adegree.uthorities,hubscore total 5 variables
var6_degree<-within(ncentrality, rm(authorities,hubscore)) #without authorities, hubscore total 5 variables
write.csv(centrality,"Centrality_Email_EuAll.csv")
write.csv(ncentrality,"NCentrality_Email_EuAll.csv")
#------------------------------------------Boxplot and corelation matrix start-------------------------------------#
M <- cor(ncentrality)
res.pca6_degree<-prcomp(scale(var6_degree),center=TRUE) #  with degree 5 variables
res.pca5<-prcomp(scale(var5),center=TRUE) #  without degree 5 variables
res.pca6<-prcomp(scale(var6),center=TRUE) #  6 variables
res.pca7<-prcomp(scale(var7),center=TRUE) #  7 variables
res.pca8<-prcomp(scale(var8),center=TRUE) #  8 variables
#show pca values
print(res.pca6_degree)
print(res.pca5)
print(res.pca6)
print(res.pca7)
print(res.pca8)
p1<-fviz_eig(res.pca6_degree,addlabels = TRUE)#Scree plot 5 var
p2<-fviz_eig(res.pca5,addlabels = TRUE)#Scree plot 5 var
p3<-fviz_eig(res.pca6,addlabels = TRUE) #Scree plot 6 var
p4<-fviz_eig(res.pca7,addlabels = TRUE)#Scree plot 7 var
p5<-fviz_eig(res.pca8,addlabels = TRUE)#Scree plot 8 var
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
grid.arrange(arrangeGrob(p1, p2, p3, p4,p5, main = "Biplot", ncol=2))
ncen_tr<-transpose(ncentrality2) #transpose ncentrality for tsne
ncen_tr<-transpose(ncentrality) #transpose ncentrality for tsne
ncen_tr<-data.frame(names = c('degree','eigenvector','closeness','pagerank','crossclique','betweeness','hubscore','authorities'),ncen_tr) #y label
fviz_pca_biplot(res.pca, label="var", habillage=ncen_tr$names,
addEllipses=TRUE, ellipse.level=0.95)
fviz_pca_biplot(res.pca8, label="var", habillage=ncen_tr$names,
addEllipses=TRUE, ellipse.level=0.95)
fviz_pca_biplot(res.pca8, label="var",
addEllipses=TRUE, ellipse.level=0.95)
fviz_pca_biplot(res.pca8, label ="var")
fviz_pca_biplot(res.pca8, label ="var", col.var="red")
p1<-fviz_pca_biplot(res.pca6_degree, label ="var")#biplot 5 var
p2<-fviz_pca_biplot(res.pca5, label ="var")#biplot 5 var
p3<-fviz_pca_biplot(res.pca6, label ="var")#biplot 6 var
p4<-fviz_pca_biplot(res.pca7, label ="var")#biplot 7 var
p5<-fviz_pca_biplot(res.pca8, label ="var")#biplot 8 var
#plot biplot
bmp("biplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, p2, p3, p4,p5, nrow = 2)
dev.off()
#plot contribution to dimensions
p1d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p1d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("biplot.bmp", width = 1920, height = 1080)
grid.arrange(p1d1,p1,p1d2, nrow = 1)
dev.off()
bmp("biplot.bmp", width = 1280, height = 720)
grid.arrange(p1d1,p1,p1d2, nrow = 1)
dev.off()
bmp("biplot.bmp", width = 1280, height = 1280)
grid.arrange(p1d1,p1,p1d2, nrow = 1)
dev.off()
bmp("biplot.bmp", width = 720, height = 720)
grid.arrange(p1d1,p1,p1d2, nrow = 1)
dev.off()
bmp("biplot.bmp", width = 600, height = 600)
grid.arrange(p1d1,p1,p1d2, nrow = 1)
dev.off()
bmp("biplot.bmp", width = 600, height = 300)
grid.arrange(p1d1,p1,p1d2, nrow = 1)
dev.off()
bmp("biplot.bmp", width = 1200, height = 600)
grid.arrange(p1d1,p1,p1d2, nrow = 1)
dev.off()
bmp("biplot.bmp", width = 841, height = 417)
grid.arrange(p1d1,p1,p1d2, nrow = 1)
dev.off()
bmp("biplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, p2, p3, p4,p5, nrow = 2)
dev.off()
#plot contribution to dimensions
p1d1<-fviz_contrib(res.pca6_degree, choice = "var", axes = 1)
p1d2<-fviz_contrib(res.pca6_degree, choice = "var", axes = 2)
p2d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p2d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
p3d1<-fviz_contrib(res.pca7, choice = "var", axes = 1)
p3d2<-fviz_contrib(res.pca7, choice = "var", axes = 2)
p4d1<-fviz_contrib(res.pca6, choice = "var", axes = 1)
p4d2<-fviz_contrib(res.pca6, choice = "var", axes = 2)
p5d1<-fviz_contrib(res.pca5, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca5, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p5d1,p5d2,p5d1,p5d2, nrow = 2)
dev.off()
rm(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p5d1,p5d2,p5d1,p5d2)
p1d1<-fviz_contrib(res.pca6_degree, choice = "var", axes = 1)
p1d2<-fviz_contrib(res.pca6_degree, choice = "var", axes = 2)
p2d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p2d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
p3d1<-fviz_contrib(res.pca7, choice = "var", axes = 1)
p3d2<-fviz_contrib(res.pca7, choice = "var", axes = 2)
p4d1<-fviz_contrib(res.pca6, choice = "var", axes = 1)
p4d2<-fviz_contrib(res.pca6, choice = "var", axes = 2)
p5d1<-fviz_contrib(res.pca5, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca5, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2, nrow = 2)
dev.off()
rm(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2)
p1d1<-fviz_contrib(res.pca6_degree, choice = "var", axes = 1)
p1d2<-fviz_contrib(res.pca6_degree, choice = "var", axes = 2)
p2d1<-fviz_contrib(res.pca5, choice = "var", axes = 1)
p2d2<-fviz_contrib(res.pca5, choice = "var", axes = 2)
p3d1<-fviz_contrib(res.pca6, choice = "var", axes = 1)
p3d2<-fviz_contrib(res.pca6, choice = "var", axes = 2)
p4d1<-fviz_contrib(res.pca7, choice = "var", axes = 1)
p4d2<-fviz_contrib(res.pca7, choice = "var", axes = 2)
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2, nrow = 2)
dev.off()
rm(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2)
p1d1<-fviz_contrib(res.pca6_degree, choice = "var", axes = 1)
p1d2<-fviz_contrib(res.pca6_degree, choice = "var", axes = 2)
p2d1<-fviz_contrib(res.pca5, choice = "var", axes = 1)
p2d2<-fviz_contrib(res.pca5, choice = "var", axes = 2)
p3d1<-fviz_contrib(res.pca6, choice = "var", axes = 1)
p3d2<-fviz_contrib(res.pca6, choice = "var", axes = 2)
p4d1<-fviz_contrib(res.pca7, choice = "var", axes = 1)
p4d2<-fviz_contrib(res.pca7, choice = "var", axes = 2)
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2, nrow = 3, ncol = 4)
dev.off()
rm(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2)
p1d1<-fviz_contrib(res.pca6_degree, choice = "var", axes = 1)
p1d2<-fviz_contrib(res.pca6_degree, choice = "var", axes = 2)
p2d1<-fviz_contrib(res.pca5, choice = "var", axes = 1)
p2d2<-fviz_contrib(res.pca5, choice = "var", axes = 2)
p3d1<-fviz_contrib(res.pca6, choice = "var", axes = 1)
p3d2<-fviz_contrib(res.pca6, choice = "var", axes = 2)
p4d1<-fviz_contrib(res.pca7, choice = "var", axes = 1)
p4d2<-fviz_contrib(res.pca7, choice = "var", axes = 2)
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,,p5d1,p5d2, nrow = 3, ncol = 4)
dev.off()
rm(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2)
p1d1<-fviz_contrib(res.pca6_degree, choice = "var", axes = 1)
p1d2<-fviz_contrib(res.pca6_degree, choice = "var", axes = 2)
p2d1<-fviz_contrib(res.pca5, choice = "var", axes = 1)
p2d2<-fviz_contrib(res.pca5, choice = "var", axes = 2)
p3d1<-fviz_contrib(res.pca6, choice = "var", axes = 1)
p3d2<-fviz_contrib(res.pca6, choice = "var", axes = 2)
p4d1<-fviz_contrib(res.pca7, choice = "var", axes = 1)
p4d2<-fviz_contrib(res.pca7, choice = "var", axes = 2)
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,"",p5d1,p5d2, nrow = 3, ncol = 4)
dev.off()
rm(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2)
p1d1<-fviz_contrib(res.pca6_degree, choice = "var", axes = 1)
p1d2<-fviz_contrib(res.pca6_degree, choice = "var", axes = 2)
p2d1<-fviz_contrib(res.pca5, choice = "var", axes = 1)
p2d2<-fviz_contrib(res.pca5, choice = "var", axes = 2)
p3d1<-fviz_contrib(res.pca6, choice = "var", axes = 1)
p3d2<-fviz_contrib(res.pca6, choice = "var", axes = 2)
p4d1<-fviz_contrib(res.pca7, choice = "var", axes = 1)
p4d2<-fviz_contrib(res.pca7, choice = "var", axes = 2)
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2, nrow = 3, ncol = 4)
dev.off()
rm(p1d1,p1d2,p2d1,p2d2,p3d1,p3d2,p4d1,p4d2,p5d1,p5d2)
p1<-fviz_pca_var(res.pca6_degree,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  6 variables
p2<-fviz_pca_var(res.pca5,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  5 variables
p3<-fviz_pca_var(res.pca6,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  6 variables
p4<-fviz_pca_var(res.pca7,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  7 variables
p5<-fviz_pca_var(res.pca8,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  8 variables
#plot contribution wise pca
#plot biplot
bmp("cos2 contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
dev.off()
eig.val5 <- get_eigenvalue(res.pca5)
eig.val6_degree<-get_eigenvalue(res.pca6_degree)
eig.val6 <- get_eigenvalue(res.pca6)
eig.val7 <- get_eigenvalue(res.pca7)
eig.val8 <- get_eigenvalue(res.pca8)
eig.val5 #shows eigenvalues
eig.val6_degree
eig.val6
eig.val7
eig.val8
res.var <- get_pca_var(res.pca8)#without degree 7 variables
res.var$coord          # Coordinates
res.var$contrib        # Contributions to the PCs
res.var$cos2           # Quality of representation
set.seed(32)
tsne_model_4_var6_degree = Rtsne(var6_degree, check_duplicates=FALSE, pca=TRUE, perplexity=50, theta=0.20, dims=2, max_iter = 2000,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 7)
qplot(tsne_model_4_var6_degree$Y,col=ncen_tr$names, asp=1)
plot(tsne_model_4_var6_degree$Y,col=ncen_tr$names, asp=1)
