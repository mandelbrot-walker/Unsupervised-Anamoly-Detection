df<-data.frame(new1 = rep(sample.int(100, 1), each=10, length.out=50))
View(df)
df<-data.frame(new1 = rep(sample.int(100, 10), each=10, length.out=50))
View(df)
df<-data.frame(new1 = rep(sample.int(100, 10), each=5, length.out=50))
View(df)
df<-data.frame(new1 = rep(sample.int(100, 10, replace = T), each=5, length.out=50))
View(df)
df<-data.frame(new1 = rep(sample.int(100, 10, replace = T), each=2, length.out=50))
View(df)
for (i in 2:50) {
new<- rep(sample.int(100, 10, replace = T), each=2, length.out=50)
df[,ncol(df)+1] <-new
colnames(df)[ncol(df)] <- paste0("new", i)
}
tsne_m1 = Rtsne(df, check_duplicates=FALSE, pca=FALSE, perplexity=0.5, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = FALSE, pca_scale = FALSE, num_threads = 5)
library(Rtsne)
library(kernlab)
tsne_m1 = Rtsne(df, check_duplicates=FALSE, pca=FALSE, perplexity=0.5, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = FALSE, pca_scale = FALSE, num_threads = 5)
plot(tsne_m1$Y,col=factor(names(df)))
df<-data.frame(new1 = rep(sample.int(100, 10, replace = T), each=2, length.out=500))
for (i in 2:500) {
new<- rep(sample.int(100, 10, replace = T), each=2, length.out=500)
df[,ncol(df)+1] <-new
colnames(df)[ncol(df)] <- paste0("new", i)
}
tsne_m1 = Rtsne(df, check_duplicates=FALSE, pca=FALSE, perplexity=0.5, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = FALSE, pca_scale = FALSE, num_threads = 5)
plot(tsne_m1$Y,col=factor(names(df)))
df<-data.frame(new1 = rep(sample.int(10, 10, replace = T), each=2, length.out=500))
for (i in 2:500) {
new<- rep(sample.int(10, 10, replace = T), each=2, length.out=500)
df[,ncol(df)+1] <-new
colnames(df)[ncol(df)] <- paste0("new", i)
}
tsne_m1 = Rtsne(df, check_duplicates=FALSE, pca=FALSE, perplexity=0.5, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = FALSE, pca_scale = FALSE, num_threads = 5)
plot(tsne_m1$Y,col=factor(names(df)))
plot(tsne_m1$Y,col=factor(df$new1))
v<-factor(df$new1)
rm(v)
plot(tsne_m1$Y,col=factor(1:10))
tsne_m1 = Rtsne(df, check_duplicates=FALSE, pca=T, perplexity=30, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = T, pca_scale = T, num_threads = 5)
plot(tsne_m1$Y,col=factor(1:10))
tsne_m1 = Rtsne(df, check_duplicates=FALSE, pca=T, perplexity=10, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = T, pca_scale = T, num_threads = 5)
plot(tsne_m1$Y,col=factor(1:10))
tsne_m1 = Rtsne(df, check_duplicates=FALSE, pca=T, perplexity=50, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = T, pca_scale = T, num_threads = 5)
plot(tsne_m1$Y,col=factor(1:10))
tsne_m1 = Rtsne(df, check_duplicates=FALSE, pca=T, perplexity=5, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = T, pca_scale = T, num_threads = 5)
plot(tsne_m1$Y,col=factor(1:10))
library(rgl)
plot3d(x=tsne_m1_3d$Y[,1],y=tsne_m1_3d$Y[,2],z=tsne_m1_3d$Y[,3],
col=cc$cluster,
type="s",radius=0.5)
tsne_m1_3d = Rtsne(df, check_duplicates=FALSE, pca=T, perplexity=5, theta=0.20, dims=2, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = T, pca_scale = T, num_threads = 5)
plot3d(x=tsne_m1_3d$Y[,1],y=tsne_m1_3d$Y[,2],z=tsne_m1_3d$Y[,3],
col=cc$cluster,
type="s",radius=0.5)
plot3d(x=tsne_m1_3d$Y[,1],y=tsne_m1_3d$Y[,2],z=tsne_m1_3d$Y[,3],
col=factor(1:10),
type="s",radius=0.5)
plot3d(x=tsne_m1_3d$Y[,1],y=tsne_m1_3d$Y[,2],z=tsne_m1_3d$Y[,3],
col=factor(1:10),
type="s",radius=1)
View(tsne_m1_3d)
tsne_m1_3d = Rtsne(df, check_duplicates=FALSE, pca=T, perplexity=5, theta=0.20, dims=3, max_iter = 1000,
verbose = TRUE, is_distance = FALSE, pca_center = T, pca_scale = T, num_threads = 5)
plot3d(x=tsne_m1_3d$Y[,1],y=tsne_m1_3d$Y[,2],z=tsne_m1_3d$Y[,3],
col=factor(1:10),
type="s",radius=1)
library(HDclassif)
hdgmm<-hddc(df, K = 1:10, model = c("ALL"), threshold = 0.45,
criterion = "bic", com_dim = 2, itermax = 50, eps = 0.001,
algo = "EM", d_select = "Cattell", init = "param", show = getHDclassif.show(),scaling = TRUE,
min.individuals = 10, noise.ctrl = 1e-08, mc.cores = 5,
nb.rep = 2, keepAllRes = FALSE, d_max = 50, subset = Inf)
plot(tsne_model_1_m1$Y, col = hdgmm$class)
plot(tsne_m1$Y, col = hdgmm$class)
plot3d(x=tsne_m1_3d$Y[,1],y=tsne_m1_3d$Y[,2],z=tsne_m1_3d$Y[,3],
col=hdgmm$class,
type="s",radius=1)
summary(hdgmm)
table(hdgmm$class)
library(mclust)
gmm <- Mclust(as.matrix(df), prior = priorControl(),
control = emControl(),
warn = mclust.options("warn"),
verbose = TRUE)
summary(gmm, parameters = TRUE)
summary(gmm, parameters = F)
table(hdgmm$class)
plot(tsne_m1$Y, col = gmm$classification)
plot(tsne_m1$Y, col = factor(gmm$classification))
plot(tsne_m1$Y, col = gmm$classification)
plot3d(x=tsne_m1_3d$Y[,1],y=tsne_m1_3d$Y[,2],z=tsne_m1_3d$Y[,3],
col=gmm$classification,
type="s",radius=1)
library(Rtsne)
library(kernlab)
library(rgl)
plot(tsne_m1$Y,col=factor(1:10))
plot3d(x=tsne_m1_3d$Y[,1],y=tsne_m1_3d$Y[,2],z=tsne_m1_3d$Y[,3],
col=factor(1:10),
type="s",radius=1)
