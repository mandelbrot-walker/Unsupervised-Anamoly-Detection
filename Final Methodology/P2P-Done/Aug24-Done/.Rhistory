amat<-as.matrix(g, matrix.type = "adjacency",
attrname = NULL, sparse = F, attr ="label")
amat<-as.matrix(g, matrix.type = "edgelist",
attrname = NULL, sparse = F, attr ="label")
amat<-as.matrix(as_adjacency_matrix(g, type = c("both"),
attr = NULL, edges = FALSE, names = TRUE,
sparse = igraph_opt("sparsematrices")))
gc()
amat<-as.matrix(as_adjacency_matrix(g, type = c("lower"),
attr = NULL, edges = FALSE, names = TRUE,
sparse = igraph_opt("sparsematrices")))
amat<-as.data.frame(as_adjacency_matrix(g, type = c("lower"),
attr = NULL, edges = FALSE, names = TRUE,
sparse = igraph_opt("sparsematrices")))
amat2<-as.data.frame(amat)
View(amat2)
rm(smat,smat2)
ck3<-Skmeans(data=amat2,centers=3,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
ck3<-Skmeans(data=as.matrix(amat2),centers=3,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
rm(amat)
ck2<-specc(as.matrix(amat2), centers=2,kernel = "rbfdot", kpar = "automatic",
nystrom.red = TRUE, nystrom.sample = dim(newt)[1]/6,
iterations = 50, mod.sample = 0.75, na.action = na.omit)
library(igraph) #  centralities
library(centiserve) #  centralities
library(factoextra)  # fviz_cluster()
library(Rtsne) #  TSNE
library(Plasmidprofiler) #  normalize()
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(CINNA) #  centralities
library(Rdimtools) #  sammon's map
library(fpc) #  calinhara()
library(clusternor)
#--------------clusters using different k values m3 spec
library(kernlab)
ck2<-specc(as.matrix(amat2), centers=2,kernel = "rbfdot", kpar = "automatic",
nystrom.red = TRUE, nystrom.sample = dim(newt)[1]/6,
iterations = 50, mod.sample = 0.75, na.action = na.omit)
ck2<-specc(as.matrix(amat2), centers=2,kernel = "rbfdot", kpar = "automatic",
nystrom.red = TRUE, nystrom.sample = dim(amat2)[1]/6,
iterations = 50, mod.sample = 0.75, na.action = na.omit)
gc()
ck2<-specc(amat2, centers=2,kernel = "rbfdot", kpar = "automatic",
nystrom.red = TRUE, nystrom.sample = dim(amat2)[1]/6,
iterations = 50, mod.sample = 0.75, na.action = na.omit)
gc()
gc()
#--------------clusters using different k values m3 spec
library(kernlab)
View(amat2)
amat3<-as.data.frame((as_adjacency_matrix(g, type = c("lower"),
attr = NULL, edges = FALSE, names = TRUE,
sparse = igraph_opt("sparsematrices"))))
library(igraph) #  centralities
library(centiserve) #  centralities
library(factoextra)  # fviz_cluster()
library(Rtsne) #  TSNE
library(Plasmidprofiler) #  normalize()
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(CINNA) #  centralities
library(Rdimtools) #  sammon's map
library(fpc) #  calinhara()
library(clusternor)
amat3<-as.data.frame((as_adjacency_matrix(g, type = c("lower"),
attr = NULL, edges = FALSE, names = TRUE,
sparse = igraph_opt("sparsematrices"))))
adg<-as_adjacency_matrix(g, type = c("lower"),
attr = NULL, edges = FALSE, names = TRUE,
sparse = igraph_opt("sparsematrices"))
amat3<-as.data.frame(summary(adg))
View(amat3)
gc()
rm(adg,amat,amat2,amat3)
library(Rdimtools)
aux.graphnbd
library(Rdimtools)
m3_litsa<-do.iltsa(
m3,
ndim = 12,
type = c("enn",2),
symmetric = c("union"),
preprocess = c("center"),
t = 30
)
m3_litsa<-do.iltsa(
m3,
ndim = 6,
type = c("enn",2),
symmetric = c("union"),
preprocess = c("center"),
t = 30
)
m3_ldim
set.seed(294)
library(igraph) #  centralities
library(centiserve) #  centralities
library(factoextra)  # fviz_cluster()
library(Rtsne) #  TSNE
library(Plasmidprofiler) #  normalize()
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(CINNA) #  centralities
library(Rdimtools) #  sammon's map
library(fpc) #  calinhara()
library(clusternor)
m3_ldim = Rtsne(m3, check_duplicates=FALSE, pca=TRUE, perplexity=prx4, theta=th4, dims=3, max_iter = mit4,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 4)
#--------------libraries--------------------#
library(igraph) #  centralities
library(centiserve) #  centralities
library(factoextra)  # fviz_cluster()
library(Rtsne) #  TSNE
library(Plasmidprofiler) #  normalize()
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(CINNA) #  centralities
library(Rdimtools) #  sammon's map
library(fpc) #  calinhara()
library(clusternor)
set.seed(294)
m3_ldim = Rtsne(m3, check_duplicates=FALSE, pca=TRUE, perplexity=prx4, theta=th4, dims=3, max_iter = mit4,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = 5)
library(igraph) #  centralities
library(centiserve) #  centralities
library(factoextra)  # fviz_cluster()
library(Rtsne) #  TSNE
library(Plasmidprofiler) #  normalize()
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(CINNA) #  centralities
library(Rdimtools) #  sammon's map
library(fpc) #  calinhara()
library(clusternor)
ck2<-specc(as.matrix(m3_ldim$Y), centers=2,kernel = "rbfdot", kpar = "automatic",
nystrom.red = TRUE, nystrom.sample = dim(m3_ldim$Y)[1]/6,
iterations = 50, mod.sample = 0.75, na.action = na.omit)
library(kernlab)
ck2<-specc(as.matrix(m3_ldim$Y), centers=2,kernel = "rbfdot", kpar = "automatic",
nystrom.red = TRUE, nystrom.sample = dim(m3_ldim$Y)[1]/6,
iterations = 50, mod.sample = 0.75, na.action = na.omit)
rm(m3_ldim)
library(igraph) #  centralities
library(centiserve) #  centralities
library(factoextra)  # fviz_cluster()
library(Rtsne) #  TSNE
library(Plasmidprofiler) #  normalize()
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(CINNA) #  centralities
library(Rdimtools) #  sammon's map
library(fpc) #  calinhara()
library(clusternor) # skmeans
#--------------libraries------
ck2<-Skmeans(data=as.matrix(m4),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck3<-Skmeans(data=as.matrix(m4),centers=3,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck4<-Skmeans(data=as.matrix(m4),centers=4,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck5<-Skmeans(data=as.matrix(m4),centers=5,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck6<-Skmeans(data=as.matrix(m4),centers=6,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
#  Checking for correct no of clusters. Higher the index value better the cluster
round(calinhara(m4,ck2$cluster),digits=2) #  21664.47  Highest
round(calinhara(m4,ck3$cluster),digits=3) #  16182.43
round(calinhara(m4,ck4$cluster),digits=4) #  11528.85
round(calinhara(m4,ck5$cluster),digits=5) #  10972.61
round(calinhara(m4,ck6$cluster),digits=6) #  8779.979
ck2<-Skmeans(data=as.matrix(m5),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck3<-Skmeans(data=as.matrix(m5),centers=3,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck4<-Skmeans(data=as.matrix(m5),centers=4,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck5<-Skmeans(data=as.matrix(m5),centers=5,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck6<-Skmeans(data=as.matrix(m5),centers=6,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck7<-Skmeans(data=as.matrix(m5),centers=7,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck8<-Skmeans(data=as.matrix(m5),centers=8,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
#  Checking for correct no of clusters. Higher the index value better the cluster
round(calinhara(m5,ck2$cluster),digits=2) #  18489.77  Highest
round(calinhara(m5,ck3$cluster),digits=3) #  16119.35
round(calinhara(m5,ck4$cluster),digits=4) #  11424.43
round(calinhara(m5,ck5$cluster),digits=5) #  10788.54
round(calinhara(m5,ck6$cluster),digits=6) #  10997.75
round(calinhara(m5,ck7$cluster),digits=7) #  4004.513
round(calinhara(m5,ck8$cluster),digits=8) #  5454.995
ck2<-Skmeans(data=as.matrix(m6),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck3<-Skmeans(data=as.matrix(m6),centers=3,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck4<-Skmeans(data=as.matrix(m6),centers=4,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck5<-Skmeans(data=as.matrix(m6),centers=5,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck6<-Skmeans(data=as.matrix(m6),centers=6,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
#  Checking for correct no of clusters. Higher the index value better the cluster
round(calinhara(m6,ck2$cluster),digits=2) #  5696.55  Highest
round(calinhara(m6,ck3$cluster),digits=3) #  5200.74
round(calinhara(m6,ck4$cluster),digits=4) #  4228.594
round(calinhara(m6,ck5$cluster),digits=5) #  4361.207
round(calinhara(m6,ck6$cluster),digits=6) #  3800.689
ck7<-Skmeans(data=as.matrix(m6),centers=7,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck8<-Skmeans(data=as.matrix(m6),centers=8,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
round(calinhara(m6,ck7$cluster),digits=7) #  15736.07
round(calinhara(m6,ck8$cluster),digits=8) #  15736.07
ck2<-Skmeans(data=as.matrix(m8),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck3<-Skmeans(data=as.matrix(m8),centers=3,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck4<-Skmeans(data=as.matrix(m8),centers=4,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck5<-Skmeans(data=as.matrix(m8),centers=5,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck6<-Skmeans(data=as.matrix(m8),centers=6,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
#  Checking for correct no of clusters. Higher the index value better the cluster
round(calinhara(m8,ck2$cluster),digits=2) #  18373.12  Highest
round(calinhara(m8,ck3$cluster),digits=3) #  15258.98
round(calinhara(m8,ck4$cluster),digits=4) #  15253.42
round(calinhara(m8,ck5$cluster),digits=5) #  13077.41
round(calinhara(m8,ck6$cluster),digits=6) #  10217.41
round(calinhara(m8,ck7$cluster),digits=7) #  57677.19
round(calinhara(m8,ck8$cluster),digits=8) #  57677.19
round(calinhara(m8,ck2$cluster),digits=2) #  57394.79
round(calinhara(m8,ck3$cluster),digits=3) #  63905.46
round(calinhara(m8,ck4$cluster),digits=4) #  70264.44 Highest
round(calinhara(m8,ck5$cluster),digits=5) #  64950.7
round(calinhara(m8,ck6$cluster),digits=6) #  57677.19
round(calinhara(m8,ck7$cluster),digits=7) #  57677.19
round(calinhara(m8,ck8$cluster),digits=8) #  57677.19
ck2<-Skmeans(data=as.matrix(m9),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck3<-Skmeans(data=as.matrix(m9),centers=3,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck4<-Skmeans(data=as.matrix(m9),centers=4,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck5<-Skmeans(data=as.matrix(m9),centers=5,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ck6<-Skmeans(data=as.matrix(m9),centers=6,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
#  Checking for correct no of clusters. Higher the index value better the cluster
round(calinhara(m9,ck2$cluster),digits=2) #  17202.42  Highest
round(calinhara(m9,ck3$cluster),digits=3) #  12415.04
round(calinhara(m9,ck4$cluster),digits=4) #  9323.659
round(calinhara(m9,ck5$cluster),digits=5) #  8433.265
round(calinhara(m9,ck6$cluster),digits=6) #  7677.063
rm(ck2,ck3,ck4,ck5,ck6,ck7,ck8,ck9)
ckm1<-Skmeans(data=as.matrix(m1),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ckm2<-Skmeans(data=as.matrix(m2),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
#ckm3<-Skmeans(data=as.matrix(m3),centers=5,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ckm4<-Skmeans(data=as.matrix(m4),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ckm5<-Skmeans(data=as.matrix(m5),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ckm6<-Skmeans(data=as.matrix(m6),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
#ckm7<-Skmeans(data=as.matrix(m7),centers=4,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ckm8<-Skmeans(data=as.matrix(m8),centers=4,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()
ckm9<-Skmeans(data=as.matrix(m9),centers=2,iter.max = 25,nthread = 5,init = c("kmeanspp"),tolerance = 0.0005)
gc()  # garbage collection is used for stack imbalance warning. run gc() more than once if the warning persists
ck1<-kmeans(m1, 3, iter.max = 20, nstart = 25,
algorithm = c("Hartigan-Wong"), trace=FALSE) #  dummy kmeans
ck2<-ck1
#ck3<-ck1
ck4<-ck1
ck5<-ck1
ck6<-ck1
#ck7<-ck1
ck8<-ck1
ck9<-ck1
bmp("tsne_model1_m1_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_1_m1$Y), col = ckm1$cluster)
dev.off()
ck1$cluster<-ckm1$cluster
ck1$centers<-ckm1$centers
ck1$size<-ckm1$size
ck1$iter<-ckm1$iters
p1 <- fviz_cluster(ck1, geom = "point",  data = as.data.frame(tsne_model_1_m1$Y))
bmp("tsne_model1_m1_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m2
bmp("tsne_model1_m2_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_1_m2$Y), col = ckm2$cluster)
dev.off()
ck2$cluster<-ckm2$cluster
ck2$centers<-ckm2$centers
ck2$size<-ckm2$size
ck2$iter<-ckm2$iters
p1 <- fviz_cluster(ck2, geom = "point",  data = as.data.frame(tsne_model_1_m2$Y))
bmp("tsne_model1_m2_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m3
# bmp("tsne_model1_m3_kmeans.bmp", width = 1980, height = 1280)
# plot(as.data.frame(tsne_model_1_m3$Y), col = ckm3$cluster)
# dev.off()
#
# ck3$cluster<-ckm3$cluster
# ck3$centers<-ckm3$centers
# ck3$size<-ckm3$size
# ck3$iter<-ckm3$iters
#
# p1 <- fviz_cluster(ck3, geom = "point",  data = as.data.frame(tsne_model_1_m3$Y))
#
# bmp("tsne_model1_m3_kmeans_ch.bmp", width = 1980, height = 1280)
# grid.arrange(p1, ncol = 1, nrow = 1)
# dev.off()
#  m4
bmp("tsne_model1_m4_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_1_m4$Y), col = ckm4$cluster)
dev.off()
ck4$cluster<-ckm4$cluster
ck4$centers<-ckm4$centers
ck4$size<-ckm4$size
ck4$iter<-ckm4$iters
p1 <- fviz_cluster(ck4, geom = "point",  data = as.data.frame(tsne_model_1_m4$Y))
bmp("tsne_model1_m4_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m5
bmp("tsne_model1_m5_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_1_m5$Y), col = ckm5$cluster)
dev.off()
ck5$cluster<-ckm5$cluster
ck5$centers<-ckm5$centers
ck5$size<-ckm5$size
ck5$iter<-ckm5$iters
p1 <- fviz_cluster(ck5, geom = "point",  data = as.data.frame(tsne_model_1_m5$Y))
bmp("tsne_model1_m5_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m6
bmp("tsne_model1_m6_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_1_m6$Y), col = ckm6$cluster)
dev.off()
ck6$cluster<-ckm6$cluster
ck6$centers<-ckm6$centers
ck6$size<-ckm6$size
ck6$iter<-ckm6$iters
p1 <- fviz_cluster(ck6, geom = "point",  data = as.data.frame(tsne_model_1_m6$Y))
bmp("tsne_model1_m6_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m7
# bmp("tsne_model1_m7_kmeans.bmp", width = 1980, height = 1280)
# plot(as.data.frame(tsne_model_1_m7$Y), col = ckm7$cluster)
# dev.off()
#
# ck7$cluster<-ckm7$cluster
# ck7$centers<-ckm7$centers
# ck7$size<-ckm7$size
# ck7$iter<-ckm7$iters
#
# p1 <- fviz_cluster(ck7, geom = "point",  data = as.data.frame(tsne_model_1_m7$Y))
#
# bmp("tsne_model1_m7_kmeans_ch.bmp", width = 1980, height = 1280)
# grid.arrange(p1, ncol = 1, nrow = 1)
# dev.off()
#  m8
bmp("tsne_model1_m8_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_1_m8$Y), col = ckm8$cluster)
dev.off()
ck8$cluster<-ckm8$cluster
ck8$centers<-ckm8$centers
ck8$size<-ckm8$size
ck8$iter<-ckm8$iters
p1 <- fviz_cluster(ck8, geom = "point",  data = as.data.frame(tsne_model_1_m8$Y))
bmp("tsne_model1_m8_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m9
bmp("tsne_model1_m9_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_1_m9$Y), col = ckm9$cluster)
dev.off()
ck9$cluster<-ckm9$cluster
ck9$centers<-ckm9$centers
ck9$size<-ckm9$size
ck9$iter<-ckm9$iters
p1 <- fviz_cluster(ck9, geom = "point",  data = as.data.frame(tsne_model_1_m9$Y))
bmp("tsne_model1_m9_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
bmp("tsne_model2_m1_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_2_m1$Y), col = ckm1$cluster)
dev.off()
p1 <- fviz_cluster(ck1, geom = "point",  data = as.data.frame(tsne_model_2_m1$Y))
bmp("tsne_model2_m1_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m2
bmp("tsne_model2_m2_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_2_m2$Y), col = ckm2$cluster)
dev.off()
p1 <- fviz_cluster(ck2, geom = "point",  data = as.data.frame(tsne_model_2_m2$Y))
bmp("tsne_model2_m2_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m3
# bmp("tsne_model2_m3_kmeans.bmp", width = 1980, height = 1280)
# plot(as.data.frame(tsne_model_2_m3$Y), col = ckm3$cluster)
# dev.off()
#
# p1 <- fviz_cluster(ck3, geom = "point",  data = as.data.frame(tsne_model_2_m3$Y))
#
# bmp("tsne_model2_m3_kmeans_ch.bmp", width = 1980, height = 1280)
# grid.arrange(p1, ncol = 1, nrow = 1)
# dev.off()
#  m4
bmp("tsne_model2_m4_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_2_m4$Y), col = ckm4$cluster)
dev.off()
p1 <- fviz_cluster(ck4, geom = "point",  data = as.data.frame(tsne_model_2_m4$Y))
bmp("tsne_model2_m4_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m5
bmp("tsne_model2_m5_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_2_m5$Y), col = ckm5$cluster)
dev.off()
p1 <- fviz_cluster(ck5, geom = "point",  data = as.data.frame(tsne_model_2_m5$Y))
bmp("tsne_model2_m5_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m6
bmp("tsne_model2_m6_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_2_m6$Y), col = ckm6$cluster)
dev.off()
p1 <- fviz_cluster(ck6, geom = "point",  data = as.data.frame(tsne_model_2_m6$Y))
bmp("tsne_model2_m6_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m7
# bmp("tsne_model2_m7_kmeans.bmp", width = 1980, height = 1280)
# plot(as.data.frame(tsne_model_2_m7$Y), col = ckm7$cluster)
# dev.off()
#
# p1 <- fviz_cluster(ck7, geom = "point",  data = as.data.frame(tsne_model_2_m7$Y))
#
# bmp("tsne_model2_m7_kmeans_ch.bmp", width = 1980, height = 1280)
# grid.arrange(p1, ncol = 1, nrow = 1)
# dev.off()
#  m8
bmp("tsne_model2_m8_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_2_m8$Y), col = ckm8$cluster)
dev.off()
p1 <- fviz_cluster(ck8, geom = "point",  data = as.data.frame(tsne_model_2_m8$Y))
bmp("tsne_model2_m8_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
#  m9
bmp("tsne_model2_m9_kmeans.bmp", width = 1980, height = 1280)
plot(as.data.frame(tsne_model_2_m9$Y), col = ckm9$cluster)
dev.off()
p1 <- fviz_cluster(ck9, geom = "point",  data = as.data.frame(tsne_model_2_m9$Y))
bmp("tsne_model2_m9_kmeans_ch.bmp", width = 1980, height = 1280)
grid.arrange(p1, ncol = 1, nrow = 1)
dev.off()
library(igraph) #  centralities
library(centiserve) #  centralities
library(factoextra)  # fviz_cluster()
library(Rtsne) #  TSNE
library(Plasmidprofiler) #  normalize()
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(CINNA) #  centralities
library(Rdimtools) #  sammon's map
library(fpc) #  calinhara()
library(clusternor) # skmeans
set.seed(729)
x<-as.matrix(m1)
sammon = do.sammon(x, ndim=2, preprocess = c("center"), initialize = "random")
bmp("sammon_m1.bmp", width = 1280, height = 720)
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2))
plot(sammon$Y, pch=19, col=factor(ncen_tr$names), main="m1")
plot(sammon$Y, pch=19, col=ckm1$cluster, main="m1 kmeans")
par(opar)
dev.off()
tsne_m1_m1<-as.data.frame(tsne_model_1_m1$Y)
tsne_m1_m1$V1<-(tsne_m1_m1$V1-min(tsne_m1_m1$V1))/(max(tsne_m1_m1$V1)-min(tsne_m1_m1$V1))
tsne_m1_m1$V2<-(tsne_m1_m1$V2-min(tsne_m1_m1$V2))/(max(tsne_m1_m1$V2)-min(tsne_m1_m1$V2))
library(MASS)
den3d <- kde2d(tsne_m1_m1$V1, tsne_m1_m1$V2)
hist(tsne_m1_m1$V1, col=rgb(1,0,0,0.5), main = "axis 1 and 2")
hist(tsne_m1_m1$V2, col=rgb(0,0,1,0.5), add=T)
box()
library(plotly)
plot_ly(x=den3d$x, y=den3d$y, z=den3d$z) %>% add_surface()
