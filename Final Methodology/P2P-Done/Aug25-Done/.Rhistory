q()
library(igraph)
#Generate a Weighted and Undirected graph with Erdos Renyi Model
gsim<-erdos.renyi.game(50, 0.5, type="gnp", directed = FALSE, loops = FALSE)
PESI<-runif(length(E(gsim)), 0, 1)
E(gsim)$weight<-PESI
#Get Adjacency
A<-get.adjacency(gsim, sparse=FALSE, attr="weight")
#Compute Onnela et al. (2005) coefficient
OnnelaClust<-ClustF(A, "undirected")
#Generate a Weighted and Directed Graph with Erdos Renyi Model
gsim<-erdos.renyi.game(50, 0.5, type="gnp", directed = TRUE, loops = FALSE)
PESI<-runif(length(E(gsim)), 0, 1)
E(gsim)$weight<-PESI
#Get Adjacency
A<-get.adjacency(gsim, sparse=FALSE, attr="weight")
#Compute Fagiolo (2007) coefficient
FagioloClust<-ClustF(A, "directed")
library(DirectedClustering)
install.packages("DirectedClustering")
library(DirectedClustering)
library(igraph)
#Generate a Weighted and Undirected graph with Erdos Renyi Model
gsim<-erdos.renyi.game(50, 0.5, type="gnp", directed = FALSE, loops = FALSE)
PESI<-runif(length(E(gsim)), 0, 1)
E(gsim)$weight<-PESI
#Get Adjacency
A<-get.adjacency(gsim, sparse=FALSE, attr="weight")
#Compute Onnela et al. (2005) coefficient
OnnelaClust<-ClustF(A, "undirected")
#Generate a Weighted and Directed Graph with Erdos Renyi Model
gsim<-erdos.renyi.game(50, 0.5, type="gnp", directed = TRUE, loops = FALSE)
PESI<-runif(length(E(gsim)), 0, 1)
E(gsim)$weight<-PESI
#Get Adjacency
A<-get.adjacency(gsim, sparse=FALSE, attr="weight")
#Compute Fagiolo (2007) coefficient
FagioloClust<-ClustF(A, "directed")
View(FagioloClust)
View(gsim)
View(OnnelaClust)
load("C:/Users/ZahinAhmed/Desktop/StatisticalRankTest/Final Methodology/P2P/Aug4-Done/.RData")
res.var
View(res.var)
View(res.var)
detectCores(all.tests = FALSE, logical = TRUE)
library(parallel)
detectCores(all.tests = FALSE, logical = TRUE)
detectCores(all.tests = TRUE, logical = TRUE)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()
load("C:/Users/ZahinAhmed/Desktop/StatisticalRankTest/Final Methodology/P2P/Aug8-Done/.RData")
library(svglite)
library(ggplot2)
library(reshape2)
melted_cormat <- melt(c)
head(melted_cormat)
ggplot(melted_cormat,aes(x=Var1, y=Var2, fill=value))+
geom_tile()
# Get lower triangle of the correlation matrix
get_lower_tri<-function(c){
c[upper.tri(c)] <- NA
return(c)
}
# Get upper triangle of the correlation matrix
get_upper_tri <- function(c){
c[lower.tri(c)]<- NA
return(c)
}
upper_tri <- get_upper_tri(c)
upper_tri
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Heatmap
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
colorblind_pal()
colorblind_pal(2)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_colorblind(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
install.packages("viridis")
library(viridis)
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+scale_fill_viridis()
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+scale_fill_viridis()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
, fill = value
, fill = value
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
scale_fill_viridis()+
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="magma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="cividis")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="cividis")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggsave(file="test.svg", dpi= "print")
library("ggsci")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_aaas()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_material("brown")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggsave(file="test2.svg", dpi= "print")
e<-E(g)
setwd("C:/Users/ZahinAhmed/Desktop/StatisticalRankTest/Final Methodology/P2P-Done/Aug8-Done")
edges<-read.delim("p2p-Gnutella08.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
library(igraph)
edges<-read.delim("p2p-Gnutella08.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
transitivity(g)
e<-E(g)
n<-V(g)
e
V
e<-ecount(g)
e
degree(g)
mean(degree(g))
edge_density(g)
transitivity(g)
library(igraph)
edges<-read.delim("p2p-Gnutella08.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
print("Number of vertices:")
gorder(g)
print("Number of edges:")
ecount(g)
print("Average degree:")
mean(degree(g))
print("Graph density:")
edge_density(g)
print("Transitivity:")
transitivity(g)
setwd("C:/Users/ZahinAhmed/Desktop/StatisticalRankTest/Final Methodology/P2P-Done/Aug24-Done")
library(igraph)
edges<-read.delim("p2p-Gnutella24.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
print("Number of vertices:")
gorder(g)
print("Number of edges:")
ecount(g)
print("Average degree:")
mean(degree(g))
print("Graph density:")
edge_density(g)
print("Transitivity:")
transitivity(g)
library(igraph)
edges<-read.delim("p2p-Gnutella24.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
print("Number of vertices:")
gorder(g)
print("Number of edges:")
ecount(g)
print("Average degree:")
mean(degree(g))
print("Graph density:")
edge_density(g)
print("Transitivity:")
transitivity(g)
library(igraph)
edges<-read.delim("p2p-Gnutella24.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
print("Number of vertices:")
gorder(g)
print("Number of edges:")
ecount(g)
print("Average degree:")
mean(degree(g))
print("Graph density:")
edge_density(g)
print("Transitivity:")
transitivity(g)
setwd("C:/Users/ZahinAhmed/Desktop/StatisticalRankTest/Final Methodology/P2P-Done/Aug25-Done/Plots")
library(igraph)
edges<-read.delim("p2p-Gnutella25.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
print("Number of vertices:")
gorder(g)
print("Number of edges:")
ecount(g)
print("Average degree:")
mean(degree(g))
print("Graph density:")
edge_density(g)
print("Transitivity:")
transitivity(g)
setwd("C:/Users/ZahinAhmed/Desktop/StatisticalRankTest/Final Methodology/P2P-Done/Aug25-Done")
library(igraph)
edges<-read.delim("p2p-Gnutella25.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
print("Number of vertices:")
gorder(g)
print("Number of edges:")
ecount(g)
print("Average degree:")
mean(degree(g))
print("Graph density:")
edge_density(g)
print("Transitivity:")
transitivity(g)
