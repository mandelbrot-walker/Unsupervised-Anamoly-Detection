#------------------------------------------Data loader and centrality calculation start-------------------------------------#
edges<-read.delim("p2p-Gnutella08.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(uwot)
library(clusternor)
g<-graph.data.frame(edges) #graph data frame for igraph
transitivity(g) #  Check for cross clique calculation
dg<-degree(g) # Calculation of Degree centrality
btn<-betweenness(g) # Calculation of Betweenness centrality
eig<-evcent(g)$vector # Calculation of Eigenvector centrality
clsn<-closeness.latora(g) # Calculation of Closeness centrality
pgr<-page_rank(g)$vector #  Calculation of Page Rank centrality
auth<-authority.score(g)$vector
hubs<-hub.score(g)$vector              #  Hub centrality
denmnc<-dmnc(g)
lby<-lobby(g)
lvg<-leverage(g)
ecc<-eccentricity(g)
infc<-calculate_centralities(g, include = "Information Centrality") #  takes a long time
lbc<-local_bridging_centrality(g)
cmp<-decompose.graph(g)
#infc<-c(0)
#infc[-1]
infc<-calculate_centralities(cmp[[1]], include = "Information Centrality") #  takes a long time
for (i in 2:length(cmp)) {
t<-cmp[[i]]
if((calculate_centralities(cmp[[i]], include = "Information Centrality")=="NULL")){
infc[(length(infc) + 1):(length(infc) + length(1))]<-0
} else{
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
infc[(length(infc) + 1):(length(infc) + length(unlist(tmp)))]<-unlist(tmp)
}
print(i)
}
#chk<-calculate_centralities(cmp[[2]], include = "Information Centrality") #  takes a long time
rm(i,tmp,t)
gr<-g # temporary variable gr
V(gr)$degree <- dg                               #  Degree centrality
V(gr)$eig <- eig                                 #  Eigenvector centrality
V(gr)$pagerank <- pgr                            #  Pagerank centrality
V(gr)$authorities <- auth                        #  Authority centrality
V(gr)$hubs <- hubs                               #  Hub centrality
V(gr)$betweenness <- btn                         #  Vertex betweenness centrality
V(gr)$closeness <- clsn                          #  Closeness centrality
V(gr)$informationcent<-unlist(infc)
V(gr)$eccentricity<-ecc
V(gr)$dmnc<-denmnc
V(gr)$lobby<-lby
V(gr)$leverage<-lvg
V(gr)$localbrigdecent<-lbc
centrality <- data.frame(row.names   = V(gr)$name,
degree      = V(gr)$degree,
eigenvector = V(gr)$eig,
pagerank    = V(gr)$pagerank,
authorities = V(gr)$authorities,
hubscore    = V(gr)$hubs,
betweenness = V(gr)$betweenness,
closeness   = V(gr)$closeness,
informationcent = V(gr)$informationcent,
eccentricity = V(gr)$eccentricity,
densitymnc  = V(gr)$dmnc,
lobby       = V(gr)$lobby,
leverage    = V(gr)$leverage,
localbridge = V(gr)$localbrigdecent
) #  Non-normalized centrality values
centrality <- centrality[order(row.names(centrality)),] #  These values are not normalized
head(centrality) #  check centrality variables
ndegree      = normalize(dg)
neigenvector = normalize(eig)
npagerank    = normalize(pgr)
nauthorities = normalize(auth)
nhubscore    = normalize(hubs)
nbetweenness = normalize(btn)
ncloseness   = normalize(clsn)
ninformationcent = normalize(unlist(infc))
neccentricity = normalize(ecc)
ndmnc        = normalize(denmnc)
nlobby       = normalize(lby)
nleverage    = normalize(lvg)
nlocalbridge = normalize(lbc)
ncentrality  <- data.frame(degree      = ndegree,              #  1
eigenvector = neigenvector,         #  2
pagerank    = npagerank,            #  3
authorities = nauthorities,         #  4
hubscore    = nhubscore,            #  5
betweenness = nbetweenness,         #  6
closeness   = ncloseness,           #  7
informationcent = ninformationcent, #  8
eccentricity = neccentricity,       #  9
dmnc        = ndmnc,                #  10
lobby       = nlobby,               #  11
leverage    = nleverage,            #  12
localbridge = nlocalbridge          #  13
) #  normalized values 13 variables
#------------------------------------------Datasets-----------------------------------------------------------------------#
m1_all_var13<-ncentrality
m2_without_dg_var12<-within(ncentrality, rm(degree))
m3_without_comm_var7<-within(ncentrality, rm(informationcent,eccentricity,dmnc,lobby,leverage,localbridge))
m4_without_nodes_var6<-within(ncentrality, rm(degree,eigenvector,pagerank,authorities,hubscore,betweenness,closeness))
m5_without_ranks_var9<-within(ncentrality, rm(eigenvector,pagerank,authorities,hubscore))
m6_without_dist_var9<-within(ncentrality, rm(betweenness,closeness,informationcent,eccentricity))
m7_mix_match1_var6<-within(ncentrality, rm(eigenvector,closeness,informationcent,dmnc,lobby,leverage,localbridge))
m8_mix_match2_var6<-within(ncentrality, rm(degree,authorities,hubscore,betweenness,informationcent,eccentricity,leverage))
m9_mix_match3_var6<-within(ncentrality, rm(closeness,eigenvector,authorities,hubscore,betweenness,leverage,informationcent))
m1<-m1_all_var13
m2<-m2_without_dg_var12
m3<-m3_without_comm_var7
m4<-m4_without_nodes_var6
m5<-m5_without_ranks_var9
m6<-m6_without_dist_var9
m7<-m7_mix_match1_var6
m8<-m8_mix_match2_var6
m9<-m9_mix_match3_var6
rm(m1_all_var13,m2_without_dg_var12,m3_without_comm_var7,m4_without_nodes_var6,m5_without_ranks_var9,m6_without_dist_var9,
m7_mix_match1_var6,m8_mix_match2_var6,m9_mix_match3_var6)
#------------------------------------------Write data start-------------------------------------#
write.csv(centrality,"Centrality_p2p_Gnutella04.csv")
write.csv(ncentrality,"NCentrality_p2p_Gnutella04.csv")
#------------------------------------------Boxplot and corelation matrix start-------------------------------------#
M <- cor(ncentrality)
#plot correlation matrix
bmp("corrplot.bmp", width = 1280, height = 720)
c<-corrplot(M, method = "circle") # correlation matrix
dev.off()
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,npagerank,nauthorities,nhubscore,nbetweenness,ncloseness,ninformationcent,neccentricity,
ndmnc,nlobby,nleverage,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13),
names = c("degree","eigenvector","pagerank","authorities","hubscore","betweenness","closeness","informationcent",
"eccentricity","dmnc","lobby","leverage","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
rm(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,ndmnc,
nlobby,nleverage,neccentricity,ninformationcent,nlocalbridge)
prx1<-50
prx2<-100
prx3<-30
prx4<-43
th1<-0.20
th2<-0.10
th3<-0.50
th4<-0.10
mit1<-2000
mit2<-1500
mit3<-1000
mit4<-1500
nthr<-7
#  m1
set.seed(32)
tsne_model_1_m1 = Rtsne(m1, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
bmp("tsne_model_1_m1.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m1$Y,col=factor(ncen_tr$names), asp=1)
ncen_tr<-transpose(ncentrality) #  transpose ncentrality for tsne colors
ncen_tr<-data.frame(names = c("degree", "eigenvector","pagerank","authorities","hubscore","betweenness","closeness",
"informationcent","eccentricity","dmnc","lobby","leverage","localbridge"),ncen_tr) #y label
dev.off()
bmp("tsne_model_1_m1.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m1$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(uwot)
library(clusternor)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(uwot)
library(clusternor)
gr<-g # temporary variable gr
V(gr)$degree <- dg                               #  Degree centrality
V(gr)$eig <- eig                                 #  Eigenvector centrality
V(gr)$pagerank <- pgr                            #  Pagerank centrality
V(gr)$authorities <- auth                        #  Authority centrality
V(gr)$hubs <- hubs                               #  Hub centrality
V(gr)$betweenness <- btn                         #  Vertex betweenness centrality
V(gr)$closeness <- clsn                          #  Closeness centrality
V(gr)$eccentricity<-ecc
V(gr)$dmnc<-denmnc
V(gr)$lobby<-lby
V(gr)$leverage<-lvg
V(gr)$localbrigdecent<-lbc
centrality <- data.frame(row.names   = V(gr)$name,
degree      = V(gr)$degree,
eigenvector = V(gr)$eig,
pagerank    = V(gr)$pagerank,
authorities = V(gr)$authorities,
hubscore    = V(gr)$hubs,
betweenness = V(gr)$betweenness,
closeness   = V(gr)$closeness,
eccentricity = V(gr)$eccentricity,
densitymnc  = V(gr)$dmnc,
lobby       = V(gr)$lobby,
leverage    = V(gr)$leverage,
localbridge = V(gr)$localbrigdecent
) #  Non-normalized centrality values
centrality <- centrality[order(row.names(centrality)),] #  These values are not normalized
head(centrality) #  check centrality variables
ndegree      = normalize(dg)
neigenvector = normalize(eig)
npagerank    = normalize(pgr)
nauthorities = normalize(auth)
nhubscore    = normalize(hubs)
nbetweenness = normalize(btn)
ncloseness   = normalize(clsn)
neccentricity = normalize(ecc)
ndmnc        = normalize(denmnc)
nlobby       = normalize(lby)
nleverage    = normalize(lvg)
nlocalbridge = normalize(lbc)
ncentrality  <- data.frame(degree      = ndegree,              #  1
eigenvector = neigenvector,         #  2
pagerank    = npagerank,            #  3
authorities = nauthorities,         #  4
hubscore    = nhubscore,            #  5
betweenness = nbetweenness,         #  6
closeness   = ncloseness,           #  7
eccentricity = neccentricity,       #  8
dmnc        = ndmnc,                #  9
lobby       = nlobby,               #  10
leverage    = nleverage,            #  11
localbridge = nlocalbridge          #  12
) #  normalized values 12 variables
#------------------------------------------Datasets-----------------------------------------------------------------------#
m1_all_var13<-ncentrality
m2_without_dg_var12<-within(ncentrality, rm(degree))
m3_without_comm_var7<-within(ncentrality, rm(eccentricity,dmnc,lobby,leverage,localbridge))
m4_without_nodes_var6<-within(ncentrality, rm(degree,eigenvector,pagerank,authorities,hubscore,betweenness,closeness))
m5_without_ranks_var9<-within(ncentrality, rm(eigenvector,pagerank,authorities,hubscore))
m6_without_dist_var9<-within(ncentrality, rm(betweenness,closeness,eccentricity))
m7_mix_match1_var6<-within(ncentrality, rm(eigenvector,closeness,dmnc,lobby,leverage,localbridge))
m8_mix_match2_var6<-within(ncentrality, rm(degree,authorities,hubscore,betweenness,eccentricity,leverage))
m9_mix_match3_var6<-within(ncentrality, rm(closeness,eigenvector,authorities,hubscore,betweenness,leverage,))
m1<-m1_all_var13
m2<-m2_without_dg_var12
m3<-m3_without_comm_var7
m4<-m4_without_nodes_var6
m5<-m5_without_ranks_var9
m6<-m6_without_dist_var9
m7<-m7_mix_match1_var6
m8<-m8_mix_match2_var6
m9<-m9_mix_match3_var6
rm(m1_all_var13,m2_without_dg_var12,m3_without_comm_var7,m4_without_nodes_var6,m5_without_ranks_var9,m6_without_dist_var9,
m7_mix_match1_var6,m8_mix_match2_var6,m9_mix_match3_var6)
m1_all_var13<-ncentrality
m2_without_dg_var12<-within(ncentrality, rm(degree))
m3_without_comm_var7<-within(ncentrality, rm(eccentricity,dmnc,lobby,leverage,localbridge))
m4_without_nodes_var6<-within(ncentrality, rm(degree,eigenvector,pagerank,authorities,hubscore,betweenness,closeness))
m5_without_ranks_var9<-within(ncentrality, rm(eigenvector,pagerank,authorities,hubscore))
m6_without_dist_var9<-within(ncentrality, rm(betweenness,closeness,eccentricity))
m7_mix_match1_var6<-within(ncentrality, rm(eigenvector,closeness,dmnc,lobby,leverage,localbridge))
m8_mix_match2_var6<-within(ncentrality, rm(degree,authorities,hubscore,betweenness,eccentricity,leverage))
m9_mix_match3_var6<-within(ncentrality, rm(closeness,eigenvector,authorities,hubscore,betweenness,leverage))
m1<-m1_all_var13
m2<-m2_without_dg_var12
m3<-m3_without_comm_var7
m4<-m4_without_nodes_var6
m5<-m5_without_ranks_var9
m6<-m6_without_dist_var9
m7<-m7_mix_match1_var6
m8<-m8_mix_match2_var6
m9<-m9_mix_match3_var6
rm(m1_all_var13,m2_without_dg_var12,m3_without_comm_var7,m4_without_nodes_var6,m5_without_ranks_var9,m6_without_dist_var9,
m7_mix_match1_var6,m8_mix_match2_var6,m9_mix_match3_var6)
bmp("corrplot.bmp", width = 1280, height = 720)
c<-corrplot(M, method = "circle") # correlation matrix
dev.off()
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,npagerank,nauthorities,nhubscore,nbetweenness,ncloseness,neccentricity,
ndmnc,nlobby,nleverage,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13),
names = c("degree","eigenvector","pagerank","authorities","hubscore","betweenness","closeness",
"eccentricity","dmnc","lobby","leverage","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
#plot boxplot
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,npagerank,nauthorities,nhubscore,nbetweenness,ncloseness,neccentricity,
ndmnc,nlobby,nleverage,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12),
names = c("degree","eigenvector","pagerank","authorities","hubscore","betweenness","closeness",
"eccentricity","dmnc","lobby","leverage","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
rm(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,ndmnc,
nlobby,nleverage,neccentricity,nlocalbridge)
ncen_tr<-transpose(ncentrality) #  transpose ncentrality for tsne colors
ncen_tr<-data.frame(names = c("degree", "eigenvector","pagerank","authorities","hubscore","betweenness","closeness",
"eccentricity","dmnc","lobby","leverage","localbridge"),ncen_tr) #y label
prx1<-50
prx2<-100
prx3<-30
prx4<-43
th1<-0.20
th2<-0.10
th3<-0.50
th4<-0.10
mit1<-2000
mit2<-1500
mit3<-1000
mit4<-1500
nthr<-11
#  m1
set.seed(32)
tsne_model_1_m1 = Rtsne(m1, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
set.seed(32)
tsne_model_1_m2 = Rtsne(m2, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
#  m3
set.seed(32)
tsne_model_1_m3 = Rtsne(m3, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
#  m3
set.seed(32)
tsne_model_1_m4 = Rtsne(m4, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
#  m5
set.seed(32)
tsne_model_1_m5 = Rtsne(m5, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
#  m6
set.seed(32)
tsne_model_1_m6 = Rtsne(m6, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
#  m7
set.seed(32)
tsne_model_1_m7 = Rtsne(m7, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
#  m8
set.seed(32)
tsne_model_1_m8 = Rtsne(m8, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
#  m9
set.seed(32)
tsne_model_1_m9 = Rtsne(m9, check_duplicates=FALSE, pca=TRUE, perplexity=prx1, theta=th1, dims=2, max_iter = mit1,
verbose = TRUE, is_distance = FALSE, pca_center = TRUE, pca_scale = TRUE, num_threads = nthr)
bmp("tsne_model_1_m1.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m1$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
bmp("tsne_model_1_m2.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m2$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
bmp("tsne_model_1_m3.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m3$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
bmp("tsne_model_1_m4.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m4$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
bmp("tsne_model_1_m5.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m5$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
bmp("tsne_model_1_m6.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m6$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
bmp("tsne_model_1_m7.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m7$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
bmp("tsne_model_1_m8.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m8$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
bmp("tsne_model_1_m9.bmp", width = 1920, height = 1080)
plot(tsne_model_1_m9$Y,col=factor(ncen_tr$names), asp=1)
dev.off()
