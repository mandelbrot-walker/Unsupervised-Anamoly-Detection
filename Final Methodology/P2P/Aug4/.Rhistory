library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
auth<-authority.score(g)
hubs<-hub.score(g)             #  Hub centrality
c<-c("Page Rank","Closeness centrality (Latora)","Degree Centrality","eigenvector centralities",
"Kleinberg's authority centrality scores", "Kleinberg's hub centrality scores","Shortest-Paths Betweenness Centrality",
"DMNC - Density of Maximum Neighborhood Component","Lobby Index (Centrality)", "Leverage Centrality",
"Eccentricity Centrality", "Information Centrality","Local Bridging Centrality")
calculate_centralities(g, include = c)%>%
pca_centralities(scale.unit = TRUE, ncp = 50) # takes indefinite time
rm(c1,clustgmm,d_tsne_4_var8,M,ncen_tr,ncentralityopar,p1,res.db)
rm(umap_calc,umap_var8,var8,xyMclust,tsne_model_1_var8,tsne_model_2_var8,tsne_model_3_var8,tsne_model_4_var8)
rm(c)
rm(clstrnk,radial,subg,topol,gkp,)
rm(clstrnk,radial,subg,topol,gkp)
rm(sammon,str)
rm(opar,ncentrality)
View(auth)
?authority.score
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
?authority.score
dg<-degree(g) # Calculation of Degree centrality
btn<-betweenness(g) # Calculation of Betweenness centrality
eig<-evcent(g)$vector # Calculation of Eigenvector centrality
clsn<-closeness.latora(g) # Calculation of Closeness centrality
pgr<-page_rank(g)$vector #  Calculation of Page Rank centrality
auth<-authority.score(g)$vector
hubs<-hub.score(g)$vector              #  Hub centrality
denmnc<-dmnc(g)
lby<-lobby(g)
lvg<-leverage(g)
ecc<-eccentricity(g)
infc<-calculate_centralities(g, include = "Information Centrality") #  takes a long time
lbc<-local_bridging_centrality(g)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
gr<-g # temporary variable gr
gr<-g # temporary variable gr
V(gr)$degree <- dg                               #  Degree centrality
V(gr)$eig <- eig                                 #  Eigenvector centrality
V(gr)$pagerank <- pgr                            #  Pagerank centrality
V(gr)$authorities <- auth                        #  Authority centrality
V(gr)$hubs <- hubs                               #  Hub centrality
V(gr)$betweenness <- btn                         #  Vertex betweenness centrality
V(gr)$closeness <- clsn                          #  Closeness centrality
V(gr)$informationcent<-unlist(infc)
V(gr)$eccentricity<-ecc
V(gr)$dmnc<-denmnc
V(gr)$lobby<-lby
V(gr)$leverage<-lvg
V(gr)$localbrigdecent<-lbc
centrality <- data.frame(row.names   = V(gr)$name,
degree      = V(gr)$degree,
eigenvector = V(gr)$eig,
pagerank    = V(gr)$pagerank,
authorities = V(gr)$authorities,
hubscore    = V(gr)$hubs,
betweenness = V(gr)$betweenness,
closeness   = V(gr)$closeness,
informationcent = V(gr)$informationcent,
eccentricity = V(gr)$eccentricity,
densitymnc  = V(gr)$dmnc,
lobby       = V(gr)$lobby,
leverage    = V(gr)$leverage,
localbridge = V(gr)$localbrigdecent
) #  Non-normalized centrality values
centrality <- centrality[order(row.names(centrality)),] #  These values are not normalized
head(centrality) #  check centrality variables
ndegree      = normalize(dg)
neigenvector = normalize(eig)
npagerank    = normalize(pgr)
nauthorities = normalize(auth)
nhubscore    = normalize(hubs)
nbetweenness = normalize(btn)
ncloseness   = normalize(clsn)
ninformationcent = normalize(unlist(infc))
neccentricity = normalize(ecc)
ndmnc        = normalize(denmnc)
nlobby       = normalize(lby)
nleverage    = normalize(lvg)
nlocalbridge = normalize(lbc)
ncentrality  <- data.frame(degree      = ndegree,
eigenvector = neigenvector,
pagerank    = npagerank,
authorities = nauthorities,
hubscore    = nhubscore,
betweenness = nbetweenness,
closeness   = ncloseness,
informationcent = ninformationcent,
eccentricity = neccentricity,
dmnc        = ndmnc,
lobby       = nlobby,
leverage    = nleverage,
localbridge = nlocalbridge
) #  normalized values 8 variables
mix_match2_var6_m8<-within(ncentrality, rm(closeness,eigenvector,authorities,hubscore,betweenness,leverage,informationcent))
without_dg_var12_m9<-within(ncentrality, rm(degree))
rm(without_dg_var12_m9,mix_match2_var6_m8)
m2_without_comm_var7<-ncentrality[,c(8,9,10,11,12,13)]
head(m2_without_comm_var7)
m2_without_comm_var7<-ncentrality[,-c(8,9,10,11,12,13)]
m2_without_comm_var7<-ncentrality[,-c(8,9,10,11,12,13)]
head(m2_without_comm_var7)
m1_all_var13<-ncentrality
#------------------------------------------Write data start-------------------------------------#
write.csv(centrality,"Centrality_p2p_Gnutella04.csv")
write.csv(ncentrality,"NCentrality_p2p_Gnutella04.csv")
#------------------------------------------Boxplot and corelation matrix start-------------------------------------#
M <- cor(ncentrality)
bmp("corrplot.bmp", width = 1280, height = 720)
c<-corrplot(M, method = "circle") # correlation matrix
dev.off()
head(ncentrality)
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,npagerank,nauthorities,nhubscore,nbetweenness,ncloseness,ninformationcent,neccentricity,
ndmnc,nlobby,nleverage,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13),
names = c("degree","eigenvector","pagerank","authorities","hubscore","betweenness","closeness","informationcent",
"eccentricity","dmnc","lobby","leverage","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
