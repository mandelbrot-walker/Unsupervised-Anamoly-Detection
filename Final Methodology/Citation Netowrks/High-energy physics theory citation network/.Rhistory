getwd()
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(uwot)
#------------------------------------------Data loader and centrality calculation start-------------------------------------#
edges<-read.delim("Cit-HepTh.txt",header = TRUE, sep = "\t")
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(uwot)
g<-graph.data.frame(edges) #graph data frame for igraph
transitivity(g) #  Check for cross clique calculation
cmp<-decompose.graph(g)
rm(cmp)
decompose.graph(g)
clusters(g)
cmp<-decompose.graph(g)
cmp[[33]]
components(g)
dg<-degree(g) # Calculation of Degree centrality
btn<-betweenness(g) # Calculation of Betweenness centrality
eig<-evcent(g)$vector # Calculation of Eigenvector centrality
clsn<-closeness.latora(g) # Calculation of Closeness centrality
pgr<-page_rank(g)$vector #  Calculation of Page Rank centrality
auth<-authority.score(g)$vector
hubs<-hub.score(g)$vector              #  Hub centrality
denmnc<-dmnc(g)
lby<-lobby(g)
lvg<-leverage(g)
ecc<-eccentricity(g)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(uwot)
#infc<-c(0)
#infc[-1]
infc<-calculate_centralities(cmp[[1]], include = "Information Centrality") #  takes a long time
gc()
for (i in 2:length(cmp)) {
t<-cmp[[i]]
if((calculate_centralities(cmp[[i]], include = "Information Centrality")=="NULL")){
infc[(length(infc) + 1):(length(infc) + length(1))]<-0
} else{
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
infc[(length(infc) + 1):(length(infc) + length(unlist(tmp)))]<-unlist(tmp)
}
print(i)
}
#chk<-calculate_centralities(cmp[[2]], include = "Information Centrality") #  takes a long time
rm(i,tmp,t)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(uwot)
lbc<-local_bridging_centrality(g)
gr<-g # temporary variable gr
V(gr)$degree <- dg                               #  Degree centrality
V(gr)$eig <- eig                                 #  Eigenvector centrality
V(gr)$pagerank <- pgr                            #  Pagerank centrality
V(gr)$authorities <- auth                        #  Authority centrality
V(gr)$hubs <- hubs                               #  Hub centrality
V(gr)$betweenness <- btn                         #  Vertex betweenness centrality
V(gr)$closeness <- clsn                          #  Closeness centrality
V(gr)$informationcent<-unlist(infc)
V(gr)$eccentricity<-ecc
V(gr)$dmnc<-denmnc
V(gr)$lobby<-lby
V(gr)$leverage<-lvg
V(gr)$localbrigdecent<-lbc
centrality <- data.frame(row.names   = V(gr)$name,
degree      = V(gr)$degree,
eigenvector = V(gr)$eig,
pagerank    = V(gr)$pagerank,
authorities = V(gr)$authorities,
hubscore    = V(gr)$hubs,
betweenness = V(gr)$betweenness,
closeness   = V(gr)$closeness,
informationcent = V(gr)$informationcent,
eccentricity = V(gr)$eccentricity,
densitymnc  = V(gr)$dmnc,
lobby       = V(gr)$lobby,
leverage    = V(gr)$leverage,
localbridge = V(gr)$localbrigdecent
) #  Non-normalized centrality values
centrality <- centrality[order(row.names(centrality)),] #  These values are not normalized
head(centrality) #  check centrality variables
ndegree      = normalize(dg)
neigenvector = normalize(eig)
npagerank    = normalize(pgr)
nauthorities = normalize(auth)
nhubscore    = normalize(hubs)
nbetweenness = normalize(btn)
ncloseness   = normalize(clsn)
ninformationcent = normalize(unlist(infc))
neccentricity = normalize(ecc)
ndmnc        = normalize(denmnc)
nlobby       = normalize(lby)
nleverage    = normalize(lvg)
nlocalbridge = normalize(lbc)
ncentrality  <- data.frame(degree      = ndegree,              #  1
eigenvector = neigenvector,         #  2
pagerank    = npagerank,            #  3
authorities = nauthorities,         #  4
hubscore    = nhubscore,            #  5
betweenness = nbetweenness,         #  6
closeness   = ncloseness,           #  7
informationcent = ninformationcent, #  8
eccentricity = neccentricity,       #  9
dmnc        = ndmnc,                #  10
lobby       = nlobby,               #  11
leverage    = nleverage,            #  12
localbridge = nlocalbridge          #  13
) #  normalized values 8 variables
#------------------------------------------Datasets-----------------------------------------------------------------------#
m1_all_var13<-ncentrality
m2_without_dg_var12<-within(ncentrality, rm(degree))
m3_without_comm_var7<-within(ncentrality, rm(informationcent,eccentricity,dmnc,lobby,leverage,localbridge))
m4_without_nodes_var6<-within(ncentrality, rm(degree,eigenvector,pagerank,authorities,hubscore,betweenness,closeness))
m5_without_ranks_var9<-within(ncentrality, rm(eigenvector,pagerank,authorities,hubscore))
m6_without_dist_var9<-within(ncentrality, rm(betweenness,closeness,informationcent,eccentricity))
m7_mix_match1_var6<-within(ncentrality, rm(eigenvector,closeness,informationcent,dmnc,lobby,leverage,localbridge))
m8_mix_match2_var6<-within(ncentrality, rm(degree,authorities,hubscore,betweenness,informationcent,eccentricity,leverage))
m9_mix_match3_var6<-within(ncentrality, rm(closeness,eigenvector,authorities,hubscore,betweenness,leverage,informationcent))
m1<-m1_all_var13
m2<-m2_without_dg_var12
m3<-m3_without_comm_var7
m4<-m4_without_nodes_var6
m5<-m5_without_ranks_var9
m6<-m6_without_dist_var9
m7<-m7_mix_match1_var6
m8<-m8_mix_match2_var6
m9<-m9_mix_match3_var6
gr<-g # temporary variable gr
V(gr)$degree <- dg                               #  Degree centrality
V(gr)$eig <- eig                                 #  Eigenvector centrality
V(gr)$pagerank <- pgr                            #  Pagerank centrality
V(gr)$authorities <- auth                        #  Authority centrality
V(gr)$hubs <- hubs                               #  Hub centrality
V(gr)$betweenness <- btn                         #  Vertex betweenness centrality
V(gr)$closeness <- clsn                          #  Closeness centrality
V(gr)$informationcent<-unlist(infc)
V(gr)$eccentricity<-ecc
V(gr)$dmnc<-denmnc
V(gr)$lobby<-lby
V(gr)$leverage<-lvg
V(gr)$localbrigdecent<-lbc
tmp<-unlist(infc)
V(gr)$informationcent<-unlist(infc)
View(infc)
infc[[1]]
infc[1]
rm(tmp)
gc(0)
#infc<-c(0)
#infc[-1]
infc<-calculate_centralities(cmp[[1]], include = "Information Centrality") #  takes a long time
View(infc)
components(g0)
components(g)
cmp[[1]]
cmp[1]
unlist(infc)
gc(0)
length(centrality$informationcent)
View(centrality)
for (i in 2:length(cmp)) {
t<-cmp[[i]]
if((calculate_centralities(cmp[[i]], include = "Information Centrality")=="NULL")){
infc[(length(infc) + 1):(length(infc) + length(1))]<-0
} else{
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
infc[(length(infc) + 1):(length(infc) + length(unlist(tmp)))]<-unlist(tmp)
}
print(i)
}
View(infc)
components(g)
tmp<-unlist(infc)
tmp
infc[-1]
t<-infc[-1]
tmp<-unlist(t)
plot(comp[[1]])
