library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
#------------------------------------------Data loader and centrality calculation start-------------------------------------#
edges<-read.delim("astroPh.txt",header = TRUE, sep = "\t")
#------------------------------------------Data loader and centrality calculation start-------------------------------------#
edges<-read.delim("CA-AstroPh.txt",header = TRUE, sep = "\t")
#------------------------------------------Data loader and centrality calculation start-------------------------------------#
edges<-read.delim("CA-AstroPh.txt",header = TRUE, sep = "\t")
g<-graph.data.frame(edges) #graph data frame for igraph
transitivity(g) #  Check for cross clique calculation
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
dg<-degree(g) # Calculation of Degree centrality
transitivity(g) #  Check for cross clique calculation
btn<-betweenness(g) # Calculation of Betweenness centrality
eig<-evcent(g)$vector # Calculation of Eigenvector centrality
clsn<-closeness.latora(g) # Calculation of Closeness centrality
pgr<-page_rank(g)$vector #Calculation of Page Rank centrality
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
radial<-radiality(g) #  takes awhile
lby<-lobby(g)
denmnc<-dmnc(g)
lvg<-leverage(g)
topol<-topocoefficient(as.undirected(g))
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
ecc<-eccentricity(g)
gkp<-geokpath(g)
gc()
#mkc<-markovcent(g) #  takes a lot of memory and time therefore stopped
#entc<-entropy(g) #  takes too long therefore stopped
lbc<-local_bridging_centrality(g)
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
library(sna)
str<-calculate_centralities(g, include = "Stress Centrality") #  takes a lot of memory
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
str<-calculate_centralities(g, include = "Stress Centrality") #  takes a lot of memory
is.connected(g)
infc<-calculate_centralities(g, include = "Information Centrality") #  takes a long time
str<-calculate_centralities(as.directed(g), include = "Stress Centrality") #  takes a lot of memory
infc<-calculate_centralities(as.directed(g), include = "Information Centrality") #  takes a long time
vertex_connectivity(g, source = NULL, target = NULL,
checks = TRUE)
vertex_connectivity(g, source = NULL, target = NULL)
