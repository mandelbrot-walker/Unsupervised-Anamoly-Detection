#informationcent = ninformationcent,
localbridge = nlocalbridge
) #  normalized values 8 variables
rm(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge)
var8<-ncentrality
#------------------------------------------Boxplot and corelation matrix start-------------------------------------#
M <- cor(ncentrality)
bmp("corrplot.bmp", width = 1280, height = 720)
c<-corrplot(M, method = "circle") # correlation matrix
dev.off()
ndegree      = normalize(dg)
neigenvector = normalize(eig)
ncloseness   = normalize(clsn)
npagerank    = normalize(pgr)
#ncrossclique = normalize(crsc)
nbetweenness = normalize(btn)
nhubscore    = normalize(V(gr)$hubs)
nauthorities = normalize(V(gr)$authorities)
#nradiality   = normalize(radial)
#nclusterrank = normalize(clstrnk)
ndmnc        = normalize(denmnc)
nlobby       = normalize(lby)
nleverage    = normalize(lvg)
#nsubgraph    = normalize(abs(subg))
#ntopologicalcoeff = normalize(topol)
neccentricity = normalize(ecc)
ngeodkpath   = normalize(gkp)
#nstress      = normalize(unlist(str))
#ninformationcent = normalize(unlist(infc))
nlocalbridge = normalize(lbc)
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,ndmnc,
nlobby,nleverage,neccentricity,ngeodkpath,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"dmnc","lobby","leverage","eccentricity",
"geodkpath","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
#plot boxplot
bmp("boxplot.bmp", width = 1280, height = 720)
boxplot(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,ndmnc,
nlobby,nleverage,neccentricity,ngeodkpath,nlocalbridge,
main = "Multiple boxplots for comparision",
at = c(1,2,3,4,5,6,7,8,9,10,11,12,13),
names = c("degree", "eigenvector", "closeness", "pagerank","betweenness","hubscore","authorities",
"dmnc","lobby","leverage","eccentricity",
"geodkpath","localbridge"),
las = 2,
col = c("orange","black"),
border = "brown",
horizontal = TRUE,
notch = FALSE
) #multiple boxplot
dev.off()
res.pca8<-prcomp(scale(var8),center=TRUE) #  8 variables
#show pca values
print(res.pca8)
p1<-fviz_eig(res.pca8,addlabels = TRUE)#Scree plot 8 var
#plot screeplot
bmp("screeplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
p1<-fviz_pca_biplot(res.pca8, label ="var")#biplot 8 var
#plot biplot
bmp("biplot.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
#plot contribution to dimensions
p5d1<-fviz_contrib(res.pca8, choice = "var", axes = 1)
p5d2<-fviz_contrib(res.pca8, choice = "var", axes = 2)
bmp("dimension contribution.bmp", width = 1920, height = 1080)
grid.arrange(p5d1,p5d2, nrow = 1, ncol = 2)
dev.off()
rm(p5d1,p5d2) #  remove contribution plot variables
# Color by contributions to the PC uses cos^2 value
p1<-fviz_pca_var(res.pca8,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
) #  8 variables
#plot contribution wise pca
#plot biplot
bmp("cos2 contribution.bmp", width = 1920, height = 1080)
grid.arrange(p1, nrow = 1)
dev.off()
eig.val8 <- get_eigenvalue(res.pca8)
eig.val8
#  Results for Variables
res.var <- get_pca_var(res.pca8)#  8 variables
res.var$coord          #  Coordinates
res.var$contrib        #  Contributions to the PCs
res.var$cos2           #  Quality of representation
#------------------------------------------PCA end-------------------------------------#
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
count_components(g)
rm(ndegree,neigenvector,ncloseness,npagerank,nbetweenness,nhubscore,nauthorities,nradiality,nclusterrank,ndmnc,
nlobby,nleverage,nsubgraph,ntopologicalcoeff,neccentricity,ngeodkpath,nstress,ninformationcent,nlocalbridge)
cmp<-decompose.graph(g)
View(cmp)
components(g)
is.connected(cmp[[1]])
is.connected(cmp[[1:290]])
is.connected(cmp[[257]])
chk<-rbind.data.frame(unlist(cmp))
View(cmp)
chk<-rbind.data.frame(unlist(cmp[[i]]))
for (i in 2:4) {
chk<-rbind.data.frame(unlist(cmp[[i]]))
}
for (i in 2:4) {
t<-unlist(cmp[[i]])
chk<-rbind.data.frame(t)
}
chk<-rbind.(t)
for (i in 2:4) {
t<-unlist(cmp[[i]])
chk<-rbind.(t)
}
for (i in 2:4) {
t<-unlist(cmp[[i]])
chk<-rbind(t)
}
View(chk)
for (i in 2:4) {
t<-unlist(cmp[[i]])
chk<-as.data.frame(rbind(t))
}
View(chk)
for (i in 2:4) {
t<-unlist(cmp[[i]])
chk<-as.data.frame(cbind(t))
}
View(chk)
cmp[[2]]
for (i in 2:4) {
t<-(cmp[[i]])
chk<-as.data.frame(cbind(t))
}
View(chk)
test<-graph.data.frame(chk)
for (i in 2:4) {
t<-(cmp[[i]])
chk<-cbind(t)
}
View(chk)
for (i in 2:4) {
t<-(cmp[[i]])
chk<-graph.data.frame(cbind(t))
}
t<-graph.data.frame()
for (i in 2:4) {
t<-graph.data.frame(cmp[[i]])
chk<-graph.data.frame(cbind(t))
}
for (i in 2:4) {
t<-cmp[[i]]
chk<-graph.data.frame(cbind(t))
}
t<-cmp[[2]]
View(t)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(g), include = "Stress Centrality")
chk<-cbind(unlist(t))
}
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
chk<-cbind(unlist(t))
}
View(chk)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
t<-unlist(t)
chk<-cbind(t)
}
View(chk)
View(tmp)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
tmp
t<-unlist(t)
chk<-cbind(t)
}
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
t<-unlist(t)
chk<-cbind(t)
}
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
chk<-cbind(unlist(tmp))
}
View(chk)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
chk<-rbind(unlist(tmp))
}
View(chk)
rm(chk)
chk
chk<-as.data.frame()
chk<-1:10
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
chk<-cbind(chk,unlist(tmp))
}
chk<-1:10
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
chk(i)<-unlist(tmp)
}
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
chk[i]<-unlist(tmp)
}
df <- data.frame(x = numeric(8), stringsAsFactors = FALSE)
View(df)
df <- data.frame(stresscent = numeric(8), stringsAsFactors = FALSE)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
chk[i]<-unlist(tmp)
df[i,] <- tmp
}
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
df[i,] <- tmp
}
unlist(tmp)
df <- data.frame(stresscent = numeric(8), tmp = numeric(8), stringsAsFactors = FALSE)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
df[i,] <- tmp
}
tmp
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
df <- cbind(df,unlist(tmp))
}
rm(df)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
#tmp<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
df <- cbind(df,unlist(tmp))
}
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
chk<-c(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp))
}
View(chk)
View(chk)
chk<-unlist(cmp)
View(chk)
tmp<-<-graph.data.frame(chk)
tmp<-graph.data.frame(chk)
View(tmp)
View(chk)
View(t)
unlist(t)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
chk<-rbind(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp))
}
View(chk)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
chk<-rbind(unlist(tmp))
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp))
}
View(chk)
length(tmp)
length(unlist(tmp))
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
chk[(length(vector) + 1):(length(chk) + length(unlist(tmp)))]<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp)) vector[(length(vector) + 1):(length(vector) + length(values))] <- values
}
chk<-1:2
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
chk[(length(chk) + 1):(length(chk) + length(unlist(tmp)))]<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp)) vector[(length(vector) + 1):(length(vector) + length(values))] <- values
}
chk
chk<-c(0)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
chk[(length(chk) + 1):(length(chk) + length(unlist(tmp)))]<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp)) vector[(length(vector) + 1):(length(vector) + length(values))] <- values
}
chk
chk[1]<-2
chk[-1]
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
for (i in 2:10) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
chk<-c(0)
for (i in 2:4) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
print(tmp)
chk[(length(chk) + 1):(length(chk) + length(unlist(tmp)))]<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp)) vector[(length(vector) + 1):(length(vector) + length(values))] <- values
}
chk[-1]
for (i in 2:10) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
#print(tmp)
chk[(length(chk) + 1):(length(chk) + length(unlist(tmp)))]<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp)) vector[(length(vector) + 1):(length(vector) + length(values))] <- values
}
chk[-1]
str<-c(0)
for (i in 2:10) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
#print(tmp)
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp)) vector[(length(vector) + 1):(length(vector) + length(values))] <- values
}
str[-1]
for (i in 2:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
#print(tmp)
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
#chk<-cbind(chk,unlist(tmp))
#chk[i]<-unlist(tmp)
#df <- cbind(df,unlist(tmp)) vector[(length(vector) + 1):(length(vector) + length(values))] <- values
}
str[-1]
rm(chk)
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Stress Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
gc()
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(g), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
for (i in 1:length(cmp)) {
#t<-cmp[[i]]
#tmp<-calculate_centralities(as.directed(g), include = "Information Centrality")
#str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
is.connected(cmp[[i]])
}
for (i in 1:length(cmp)) {
#t<-cmp[[i]]
#tmp<-calculate_centralities(as.directed(g), include = "Information Centrality")
#str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
print(is.connected(cmp[[i]]))
}
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(g), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
library(igraph)
library(centiserve)
library(tidyverse)
library(factoextra)
library(Rtsne)
library(Plasmidprofiler)
library(MASS)
library(data.table)
library(corrplot)
library(tibble)
library(caret)
library(plyr)
library(gridExtra)
library(CINNA)
library(ClusterR)
library(mclust)
library(kohonen)
library(kernlab)
library(Rdimtools)
library(scatterplot3d)
library(rgl)
library(fpc)
str<-c(0)
for (i in 1:length(cmp)) {
t<-cmp[[i]]
tmp<-calculate_centralities(as.directed(t), include = "Information Centrality")
str[(length(str) + 1):(length(str) + length(unlist(tmp)))]<-unlist(tmp)
}
